// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proof.proto

package types;

public final class Proof {
  private Proof() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface AccumulatorProofOrBuilder extends
      // @@protoc_insertion_point(interface_extends:types.AccumulatorProof)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The bitmap indicating which siblings are default. 1 means non-default and
     * 0 means default. The LSB corresponds to the sibling at the bottom of the
     * accumulator. The leftmost 1-bit corresponds to the sibling at the level
     * just below root level in the accumulator, since this one is always
     * non-default.
     * </pre>
     *
     * <code>uint64 bitmap = 1;</code>
     */
    long getBitmap();

    /**
     * <pre>
     * The non-default siblings. The ones near the root are at the beginning of
     * the list.
     * </pre>
     *
     * <code>repeated bytes non_default_siblings = 2;</code>
     */
    java.util.List<com.google.protobuf.ByteString> getNonDefaultSiblingsList();
    /**
     * <pre>
     * The non-default siblings. The ones near the root are at the beginning of
     * the list.
     * </pre>
     *
     * <code>repeated bytes non_default_siblings = 2;</code>
     */
    int getNonDefaultSiblingsCount();
    /**
     * <pre>
     * The non-default siblings. The ones near the root are at the beginning of
     * the list.
     * </pre>
     *
     * <code>repeated bytes non_default_siblings = 2;</code>
     */
    com.google.protobuf.ByteString getNonDefaultSiblings(int index);
  }
  /**
   * Protobuf type {@code types.AccumulatorProof}
   */
  public  static final class AccumulatorProof extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:types.AccumulatorProof)
      AccumulatorProofOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AccumulatorProof.newBuilder() to construct.
    private AccumulatorProof(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AccumulatorProof() {
      nonDefaultSiblings_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AccumulatorProof(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              bitmap_ = input.readUInt64();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                nonDefaultSiblings_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000002;
              }
              nonDefaultSiblings_.add(input.readBytes());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          nonDefaultSiblings_ = java.util.Collections.unmodifiableList(nonDefaultSiblings_); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return types.Proof.internal_static_types_AccumulatorProof_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return types.Proof.internal_static_types_AccumulatorProof_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              types.Proof.AccumulatorProof.class, types.Proof.AccumulatorProof.Builder.class);
    }

    private int bitField0_;
    public static final int BITMAP_FIELD_NUMBER = 1;
    private long bitmap_;
    /**
     * <pre>
     * The bitmap indicating which siblings are default. 1 means non-default and
     * 0 means default. The LSB corresponds to the sibling at the bottom of the
     * accumulator. The leftmost 1-bit corresponds to the sibling at the level
     * just below root level in the accumulator, since this one is always
     * non-default.
     * </pre>
     *
     * <code>uint64 bitmap = 1;</code>
     */
    public long getBitmap() {
      return bitmap_;
    }

    public static final int NON_DEFAULT_SIBLINGS_FIELD_NUMBER = 2;
    private java.util.List<com.google.protobuf.ByteString> nonDefaultSiblings_;
    /**
     * <pre>
     * The non-default siblings. The ones near the root are at the beginning of
     * the list.
     * </pre>
     *
     * <code>repeated bytes non_default_siblings = 2;</code>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getNonDefaultSiblingsList() {
      return nonDefaultSiblings_;
    }
    /**
     * <pre>
     * The non-default siblings. The ones near the root are at the beginning of
     * the list.
     * </pre>
     *
     * <code>repeated bytes non_default_siblings = 2;</code>
     */
    public int getNonDefaultSiblingsCount() {
      return nonDefaultSiblings_.size();
    }
    /**
     * <pre>
     * The non-default siblings. The ones near the root are at the beginning of
     * the list.
     * </pre>
     *
     * <code>repeated bytes non_default_siblings = 2;</code>
     */
    public com.google.protobuf.ByteString getNonDefaultSiblings(int index) {
      return nonDefaultSiblings_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (bitmap_ != 0L) {
        output.writeUInt64(1, bitmap_);
      }
      for (int i = 0; i < nonDefaultSiblings_.size(); i++) {
        output.writeBytes(2, nonDefaultSiblings_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (bitmap_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, bitmap_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < nonDefaultSiblings_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(nonDefaultSiblings_.get(i));
        }
        size += dataSize;
        size += 1 * getNonDefaultSiblingsList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof types.Proof.AccumulatorProof)) {
        return super.equals(obj);
      }
      types.Proof.AccumulatorProof other = (types.Proof.AccumulatorProof) obj;

      if (getBitmap()
          != other.getBitmap()) return false;
      if (!getNonDefaultSiblingsList()
          .equals(other.getNonDefaultSiblingsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BITMAP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBitmap());
      if (getNonDefaultSiblingsCount() > 0) {
        hash = (37 * hash) + NON_DEFAULT_SIBLINGS_FIELD_NUMBER;
        hash = (53 * hash) + getNonDefaultSiblingsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static types.Proof.AccumulatorProof parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Proof.AccumulatorProof parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Proof.AccumulatorProof parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Proof.AccumulatorProof parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Proof.AccumulatorProof parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Proof.AccumulatorProof parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Proof.AccumulatorProof parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static types.Proof.AccumulatorProof parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static types.Proof.AccumulatorProof parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static types.Proof.AccumulatorProof parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static types.Proof.AccumulatorProof parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static types.Proof.AccumulatorProof parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(types.Proof.AccumulatorProof prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code types.AccumulatorProof}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:types.AccumulatorProof)
        types.Proof.AccumulatorProofOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return types.Proof.internal_static_types_AccumulatorProof_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return types.Proof.internal_static_types_AccumulatorProof_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                types.Proof.AccumulatorProof.class, types.Proof.AccumulatorProof.Builder.class);
      }

      // Construct using types.Proof.AccumulatorProof.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitmap_ = 0L;

        nonDefaultSiblings_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return types.Proof.internal_static_types_AccumulatorProof_descriptor;
      }

      @java.lang.Override
      public types.Proof.AccumulatorProof getDefaultInstanceForType() {
        return types.Proof.AccumulatorProof.getDefaultInstance();
      }

      @java.lang.Override
      public types.Proof.AccumulatorProof build() {
        types.Proof.AccumulatorProof result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public types.Proof.AccumulatorProof buildPartial() {
        types.Proof.AccumulatorProof result = new types.Proof.AccumulatorProof(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.bitmap_ = bitmap_;
        if (((bitField0_ & 0x00000002) != 0)) {
          nonDefaultSiblings_ = java.util.Collections.unmodifiableList(nonDefaultSiblings_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.nonDefaultSiblings_ = nonDefaultSiblings_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof types.Proof.AccumulatorProof) {
          return mergeFrom((types.Proof.AccumulatorProof)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(types.Proof.AccumulatorProof other) {
        if (other == types.Proof.AccumulatorProof.getDefaultInstance()) return this;
        if (other.getBitmap() != 0L) {
          setBitmap(other.getBitmap());
        }
        if (!other.nonDefaultSiblings_.isEmpty()) {
          if (nonDefaultSiblings_.isEmpty()) {
            nonDefaultSiblings_ = other.nonDefaultSiblings_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureNonDefaultSiblingsIsMutable();
            nonDefaultSiblings_.addAll(other.nonDefaultSiblings_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        types.Proof.AccumulatorProof parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (types.Proof.AccumulatorProof) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long bitmap_ ;
      /**
       * <pre>
       * The bitmap indicating which siblings are default. 1 means non-default and
       * 0 means default. The LSB corresponds to the sibling at the bottom of the
       * accumulator. The leftmost 1-bit corresponds to the sibling at the level
       * just below root level in the accumulator, since this one is always
       * non-default.
       * </pre>
       *
       * <code>uint64 bitmap = 1;</code>
       */
      public long getBitmap() {
        return bitmap_;
      }
      /**
       * <pre>
       * The bitmap indicating which siblings are default. 1 means non-default and
       * 0 means default. The LSB corresponds to the sibling at the bottom of the
       * accumulator. The leftmost 1-bit corresponds to the sibling at the level
       * just below root level in the accumulator, since this one is always
       * non-default.
       * </pre>
       *
       * <code>uint64 bitmap = 1;</code>
       */
      public Builder setBitmap(long value) {
        
        bitmap_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The bitmap indicating which siblings are default. 1 means non-default and
       * 0 means default. The LSB corresponds to the sibling at the bottom of the
       * accumulator. The leftmost 1-bit corresponds to the sibling at the level
       * just below root level in the accumulator, since this one is always
       * non-default.
       * </pre>
       *
       * <code>uint64 bitmap = 1;</code>
       */
      public Builder clearBitmap() {
        
        bitmap_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<com.google.protobuf.ByteString> nonDefaultSiblings_ = java.util.Collections.emptyList();
      private void ensureNonDefaultSiblingsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          nonDefaultSiblings_ = new java.util.ArrayList<com.google.protobuf.ByteString>(nonDefaultSiblings_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * The non-default siblings. The ones near the root are at the beginning of
       * the list.
       * </pre>
       *
       * <code>repeated bytes non_default_siblings = 2;</code>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getNonDefaultSiblingsList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(nonDefaultSiblings_) : nonDefaultSiblings_;
      }
      /**
       * <pre>
       * The non-default siblings. The ones near the root are at the beginning of
       * the list.
       * </pre>
       *
       * <code>repeated bytes non_default_siblings = 2;</code>
       */
      public int getNonDefaultSiblingsCount() {
        return nonDefaultSiblings_.size();
      }
      /**
       * <pre>
       * The non-default siblings. The ones near the root are at the beginning of
       * the list.
       * </pre>
       *
       * <code>repeated bytes non_default_siblings = 2;</code>
       */
      public com.google.protobuf.ByteString getNonDefaultSiblings(int index) {
        return nonDefaultSiblings_.get(index);
      }
      /**
       * <pre>
       * The non-default siblings. The ones near the root are at the beginning of
       * the list.
       * </pre>
       *
       * <code>repeated bytes non_default_siblings = 2;</code>
       */
      public Builder setNonDefaultSiblings(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureNonDefaultSiblingsIsMutable();
        nonDefaultSiblings_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The non-default siblings. The ones near the root are at the beginning of
       * the list.
       * </pre>
       *
       * <code>repeated bytes non_default_siblings = 2;</code>
       */
      public Builder addNonDefaultSiblings(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureNonDefaultSiblingsIsMutable();
        nonDefaultSiblings_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The non-default siblings. The ones near the root are at the beginning of
       * the list.
       * </pre>
       *
       * <code>repeated bytes non_default_siblings = 2;</code>
       */
      public Builder addAllNonDefaultSiblings(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureNonDefaultSiblingsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, nonDefaultSiblings_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The non-default siblings. The ones near the root are at the beginning of
       * the list.
       * </pre>
       *
       * <code>repeated bytes non_default_siblings = 2;</code>
       */
      public Builder clearNonDefaultSiblings() {
        nonDefaultSiblings_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:types.AccumulatorProof)
    }

    // @@protoc_insertion_point(class_scope:types.AccumulatorProof)
    private static final types.Proof.AccumulatorProof DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new types.Proof.AccumulatorProof();
    }

    public static types.Proof.AccumulatorProof getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AccumulatorProof>
        PARSER = new com.google.protobuf.AbstractParser<AccumulatorProof>() {
      @java.lang.Override
      public AccumulatorProof parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AccumulatorProof(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AccumulatorProof> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AccumulatorProof> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public types.Proof.AccumulatorProof getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SparseMerkleProofOrBuilder extends
      // @@protoc_insertion_point(interface_extends:types.SparseMerkleProof)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * This proof can be used to authenticate whether a given leaf exists in the
     * tree or not. In Rust:
     *   - If this is `Some(HashValue, HashValue)`
     *     - If the first `HashValue` equals requested key, this is an inclusion
     *       proof and the second `HashValue` equals the hash of the
     *       corresponding account blob.
     *     - Otherwise this is a non-inclusion proof. The first `HashValue` is
     *       the only key that exists in the subtree and the second `HashValue`
     *       equals the hash of the corresponding account blob.
     *   - If this is `None`, this is also a non-inclusion proof which indicates
     *     the subtree is empty.
     * In protobuf, this leaf field should either be
     *   - empty, which corresponds to None in the Rust structure.
     *   - exactly 64 bytes, which corresponds to Some&lt;(HashValue, HashValue)&gt;
     *     in the Rust structure.
     * </pre>
     *
     * <code>bytes leaf = 1;</code>
     */
    com.google.protobuf.ByteString getLeaf();

    /**
     * <pre>
     * The bitmap indicating which siblings are default. 1 means non-default and
     * 0 means default. The MSB of the first byte corresponds to the sibling at
     * the top of the Sparse Merkle Tree. The rightmost 1-bit of the last byte
     * corresponds to the sibling at the bottom, since this one is always
     * non-default.
     * </pre>
     *
     * <code>bytes bitmap = 2;</code>
     */
    com.google.protobuf.ByteString getBitmap();

    /**
     * <pre>
     * The non-default siblings. The ones near the root are at the beginning of
     * the list.
     * </pre>
     *
     * <code>repeated bytes non_default_siblings = 3;</code>
     */
    java.util.List<com.google.protobuf.ByteString> getNonDefaultSiblingsList();
    /**
     * <pre>
     * The non-default siblings. The ones near the root are at the beginning of
     * the list.
     * </pre>
     *
     * <code>repeated bytes non_default_siblings = 3;</code>
     */
    int getNonDefaultSiblingsCount();
    /**
     * <pre>
     * The non-default siblings. The ones near the root are at the beginning of
     * the list.
     * </pre>
     *
     * <code>repeated bytes non_default_siblings = 3;</code>
     */
    com.google.protobuf.ByteString getNonDefaultSiblings(int index);
  }
  /**
   * Protobuf type {@code types.SparseMerkleProof}
   */
  public  static final class SparseMerkleProof extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:types.SparseMerkleProof)
      SparseMerkleProofOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SparseMerkleProof.newBuilder() to construct.
    private SparseMerkleProof(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SparseMerkleProof() {
      leaf_ = com.google.protobuf.ByteString.EMPTY;
      bitmap_ = com.google.protobuf.ByteString.EMPTY;
      nonDefaultSiblings_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SparseMerkleProof(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              leaf_ = input.readBytes();
              break;
            }
            case 18: {

              bitmap_ = input.readBytes();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                nonDefaultSiblings_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000004;
              }
              nonDefaultSiblings_.add(input.readBytes());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          nonDefaultSiblings_ = java.util.Collections.unmodifiableList(nonDefaultSiblings_); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return types.Proof.internal_static_types_SparseMerkleProof_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return types.Proof.internal_static_types_SparseMerkleProof_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              types.Proof.SparseMerkleProof.class, types.Proof.SparseMerkleProof.Builder.class);
    }

    private int bitField0_;
    public static final int LEAF_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString leaf_;
    /**
     * <pre>
     * This proof can be used to authenticate whether a given leaf exists in the
     * tree or not. In Rust:
     *   - If this is `Some(HashValue, HashValue)`
     *     - If the first `HashValue` equals requested key, this is an inclusion
     *       proof and the second `HashValue` equals the hash of the
     *       corresponding account blob.
     *     - Otherwise this is a non-inclusion proof. The first `HashValue` is
     *       the only key that exists in the subtree and the second `HashValue`
     *       equals the hash of the corresponding account blob.
     *   - If this is `None`, this is also a non-inclusion proof which indicates
     *     the subtree is empty.
     * In protobuf, this leaf field should either be
     *   - empty, which corresponds to None in the Rust structure.
     *   - exactly 64 bytes, which corresponds to Some&lt;(HashValue, HashValue)&gt;
     *     in the Rust structure.
     * </pre>
     *
     * <code>bytes leaf = 1;</code>
     */
    public com.google.protobuf.ByteString getLeaf() {
      return leaf_;
    }

    public static final int BITMAP_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString bitmap_;
    /**
     * <pre>
     * The bitmap indicating which siblings are default. 1 means non-default and
     * 0 means default. The MSB of the first byte corresponds to the sibling at
     * the top of the Sparse Merkle Tree. The rightmost 1-bit of the last byte
     * corresponds to the sibling at the bottom, since this one is always
     * non-default.
     * </pre>
     *
     * <code>bytes bitmap = 2;</code>
     */
    public com.google.protobuf.ByteString getBitmap() {
      return bitmap_;
    }

    public static final int NON_DEFAULT_SIBLINGS_FIELD_NUMBER = 3;
    private java.util.List<com.google.protobuf.ByteString> nonDefaultSiblings_;
    /**
     * <pre>
     * The non-default siblings. The ones near the root are at the beginning of
     * the list.
     * </pre>
     *
     * <code>repeated bytes non_default_siblings = 3;</code>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getNonDefaultSiblingsList() {
      return nonDefaultSiblings_;
    }
    /**
     * <pre>
     * The non-default siblings. The ones near the root are at the beginning of
     * the list.
     * </pre>
     *
     * <code>repeated bytes non_default_siblings = 3;</code>
     */
    public int getNonDefaultSiblingsCount() {
      return nonDefaultSiblings_.size();
    }
    /**
     * <pre>
     * The non-default siblings. The ones near the root are at the beginning of
     * the list.
     * </pre>
     *
     * <code>repeated bytes non_default_siblings = 3;</code>
     */
    public com.google.protobuf.ByteString getNonDefaultSiblings(int index) {
      return nonDefaultSiblings_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!leaf_.isEmpty()) {
        output.writeBytes(1, leaf_);
      }
      if (!bitmap_.isEmpty()) {
        output.writeBytes(2, bitmap_);
      }
      for (int i = 0; i < nonDefaultSiblings_.size(); i++) {
        output.writeBytes(3, nonDefaultSiblings_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!leaf_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, leaf_);
      }
      if (!bitmap_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, bitmap_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < nonDefaultSiblings_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(nonDefaultSiblings_.get(i));
        }
        size += dataSize;
        size += 1 * getNonDefaultSiblingsList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof types.Proof.SparseMerkleProof)) {
        return super.equals(obj);
      }
      types.Proof.SparseMerkleProof other = (types.Proof.SparseMerkleProof) obj;

      if (!getLeaf()
          .equals(other.getLeaf())) return false;
      if (!getBitmap()
          .equals(other.getBitmap())) return false;
      if (!getNonDefaultSiblingsList()
          .equals(other.getNonDefaultSiblingsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LEAF_FIELD_NUMBER;
      hash = (53 * hash) + getLeaf().hashCode();
      hash = (37 * hash) + BITMAP_FIELD_NUMBER;
      hash = (53 * hash) + getBitmap().hashCode();
      if (getNonDefaultSiblingsCount() > 0) {
        hash = (37 * hash) + NON_DEFAULT_SIBLINGS_FIELD_NUMBER;
        hash = (53 * hash) + getNonDefaultSiblingsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static types.Proof.SparseMerkleProof parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Proof.SparseMerkleProof parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Proof.SparseMerkleProof parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Proof.SparseMerkleProof parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Proof.SparseMerkleProof parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Proof.SparseMerkleProof parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Proof.SparseMerkleProof parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static types.Proof.SparseMerkleProof parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static types.Proof.SparseMerkleProof parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static types.Proof.SparseMerkleProof parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static types.Proof.SparseMerkleProof parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static types.Proof.SparseMerkleProof parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(types.Proof.SparseMerkleProof prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code types.SparseMerkleProof}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:types.SparseMerkleProof)
        types.Proof.SparseMerkleProofOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return types.Proof.internal_static_types_SparseMerkleProof_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return types.Proof.internal_static_types_SparseMerkleProof_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                types.Proof.SparseMerkleProof.class, types.Proof.SparseMerkleProof.Builder.class);
      }

      // Construct using types.Proof.SparseMerkleProof.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        leaf_ = com.google.protobuf.ByteString.EMPTY;

        bitmap_ = com.google.protobuf.ByteString.EMPTY;

        nonDefaultSiblings_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return types.Proof.internal_static_types_SparseMerkleProof_descriptor;
      }

      @java.lang.Override
      public types.Proof.SparseMerkleProof getDefaultInstanceForType() {
        return types.Proof.SparseMerkleProof.getDefaultInstance();
      }

      @java.lang.Override
      public types.Proof.SparseMerkleProof build() {
        types.Proof.SparseMerkleProof result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public types.Proof.SparseMerkleProof buildPartial() {
        types.Proof.SparseMerkleProof result = new types.Proof.SparseMerkleProof(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.leaf_ = leaf_;
        result.bitmap_ = bitmap_;
        if (((bitField0_ & 0x00000004) != 0)) {
          nonDefaultSiblings_ = java.util.Collections.unmodifiableList(nonDefaultSiblings_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.nonDefaultSiblings_ = nonDefaultSiblings_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof types.Proof.SparseMerkleProof) {
          return mergeFrom((types.Proof.SparseMerkleProof)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(types.Proof.SparseMerkleProof other) {
        if (other == types.Proof.SparseMerkleProof.getDefaultInstance()) return this;
        if (other.getLeaf() != com.google.protobuf.ByteString.EMPTY) {
          setLeaf(other.getLeaf());
        }
        if (other.getBitmap() != com.google.protobuf.ByteString.EMPTY) {
          setBitmap(other.getBitmap());
        }
        if (!other.nonDefaultSiblings_.isEmpty()) {
          if (nonDefaultSiblings_.isEmpty()) {
            nonDefaultSiblings_ = other.nonDefaultSiblings_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureNonDefaultSiblingsIsMutable();
            nonDefaultSiblings_.addAll(other.nonDefaultSiblings_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        types.Proof.SparseMerkleProof parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (types.Proof.SparseMerkleProof) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString leaf_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * This proof can be used to authenticate whether a given leaf exists in the
       * tree or not. In Rust:
       *   - If this is `Some(HashValue, HashValue)`
       *     - If the first `HashValue` equals requested key, this is an inclusion
       *       proof and the second `HashValue` equals the hash of the
       *       corresponding account blob.
       *     - Otherwise this is a non-inclusion proof. The first `HashValue` is
       *       the only key that exists in the subtree and the second `HashValue`
       *       equals the hash of the corresponding account blob.
       *   - If this is `None`, this is also a non-inclusion proof which indicates
       *     the subtree is empty.
       * In protobuf, this leaf field should either be
       *   - empty, which corresponds to None in the Rust structure.
       *   - exactly 64 bytes, which corresponds to Some&lt;(HashValue, HashValue)&gt;
       *     in the Rust structure.
       * </pre>
       *
       * <code>bytes leaf = 1;</code>
       */
      public com.google.protobuf.ByteString getLeaf() {
        return leaf_;
      }
      /**
       * <pre>
       * This proof can be used to authenticate whether a given leaf exists in the
       * tree or not. In Rust:
       *   - If this is `Some(HashValue, HashValue)`
       *     - If the first `HashValue` equals requested key, this is an inclusion
       *       proof and the second `HashValue` equals the hash of the
       *       corresponding account blob.
       *     - Otherwise this is a non-inclusion proof. The first `HashValue` is
       *       the only key that exists in the subtree and the second `HashValue`
       *       equals the hash of the corresponding account blob.
       *   - If this is `None`, this is also a non-inclusion proof which indicates
       *     the subtree is empty.
       * In protobuf, this leaf field should either be
       *   - empty, which corresponds to None in the Rust structure.
       *   - exactly 64 bytes, which corresponds to Some&lt;(HashValue, HashValue)&gt;
       *     in the Rust structure.
       * </pre>
       *
       * <code>bytes leaf = 1;</code>
       */
      public Builder setLeaf(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        leaf_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This proof can be used to authenticate whether a given leaf exists in the
       * tree or not. In Rust:
       *   - If this is `Some(HashValue, HashValue)`
       *     - If the first `HashValue` equals requested key, this is an inclusion
       *       proof and the second `HashValue` equals the hash of the
       *       corresponding account blob.
       *     - Otherwise this is a non-inclusion proof. The first `HashValue` is
       *       the only key that exists in the subtree and the second `HashValue`
       *       equals the hash of the corresponding account blob.
       *   - If this is `None`, this is also a non-inclusion proof which indicates
       *     the subtree is empty.
       * In protobuf, this leaf field should either be
       *   - empty, which corresponds to None in the Rust structure.
       *   - exactly 64 bytes, which corresponds to Some&lt;(HashValue, HashValue)&gt;
       *     in the Rust structure.
       * </pre>
       *
       * <code>bytes leaf = 1;</code>
       */
      public Builder clearLeaf() {
        
        leaf_ = getDefaultInstance().getLeaf();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString bitmap_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * The bitmap indicating which siblings are default. 1 means non-default and
       * 0 means default. The MSB of the first byte corresponds to the sibling at
       * the top of the Sparse Merkle Tree. The rightmost 1-bit of the last byte
       * corresponds to the sibling at the bottom, since this one is always
       * non-default.
       * </pre>
       *
       * <code>bytes bitmap = 2;</code>
       */
      public com.google.protobuf.ByteString getBitmap() {
        return bitmap_;
      }
      /**
       * <pre>
       * The bitmap indicating which siblings are default. 1 means non-default and
       * 0 means default. The MSB of the first byte corresponds to the sibling at
       * the top of the Sparse Merkle Tree. The rightmost 1-bit of the last byte
       * corresponds to the sibling at the bottom, since this one is always
       * non-default.
       * </pre>
       *
       * <code>bytes bitmap = 2;</code>
       */
      public Builder setBitmap(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        bitmap_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The bitmap indicating which siblings are default. 1 means non-default and
       * 0 means default. The MSB of the first byte corresponds to the sibling at
       * the top of the Sparse Merkle Tree. The rightmost 1-bit of the last byte
       * corresponds to the sibling at the bottom, since this one is always
       * non-default.
       * </pre>
       *
       * <code>bytes bitmap = 2;</code>
       */
      public Builder clearBitmap() {
        
        bitmap_ = getDefaultInstance().getBitmap();
        onChanged();
        return this;
      }

      private java.util.List<com.google.protobuf.ByteString> nonDefaultSiblings_ = java.util.Collections.emptyList();
      private void ensureNonDefaultSiblingsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          nonDefaultSiblings_ = new java.util.ArrayList<com.google.protobuf.ByteString>(nonDefaultSiblings_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       * The non-default siblings. The ones near the root are at the beginning of
       * the list.
       * </pre>
       *
       * <code>repeated bytes non_default_siblings = 3;</code>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getNonDefaultSiblingsList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(nonDefaultSiblings_) : nonDefaultSiblings_;
      }
      /**
       * <pre>
       * The non-default siblings. The ones near the root are at the beginning of
       * the list.
       * </pre>
       *
       * <code>repeated bytes non_default_siblings = 3;</code>
       */
      public int getNonDefaultSiblingsCount() {
        return nonDefaultSiblings_.size();
      }
      /**
       * <pre>
       * The non-default siblings. The ones near the root are at the beginning of
       * the list.
       * </pre>
       *
       * <code>repeated bytes non_default_siblings = 3;</code>
       */
      public com.google.protobuf.ByteString getNonDefaultSiblings(int index) {
        return nonDefaultSiblings_.get(index);
      }
      /**
       * <pre>
       * The non-default siblings. The ones near the root are at the beginning of
       * the list.
       * </pre>
       *
       * <code>repeated bytes non_default_siblings = 3;</code>
       */
      public Builder setNonDefaultSiblings(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureNonDefaultSiblingsIsMutable();
        nonDefaultSiblings_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The non-default siblings. The ones near the root are at the beginning of
       * the list.
       * </pre>
       *
       * <code>repeated bytes non_default_siblings = 3;</code>
       */
      public Builder addNonDefaultSiblings(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureNonDefaultSiblingsIsMutable();
        nonDefaultSiblings_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The non-default siblings. The ones near the root are at the beginning of
       * the list.
       * </pre>
       *
       * <code>repeated bytes non_default_siblings = 3;</code>
       */
      public Builder addAllNonDefaultSiblings(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureNonDefaultSiblingsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, nonDefaultSiblings_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The non-default siblings. The ones near the root are at the beginning of
       * the list.
       * </pre>
       *
       * <code>repeated bytes non_default_siblings = 3;</code>
       */
      public Builder clearNonDefaultSiblings() {
        nonDefaultSiblings_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:types.SparseMerkleProof)
    }

    // @@protoc_insertion_point(class_scope:types.SparseMerkleProof)
    private static final types.Proof.SparseMerkleProof DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new types.Proof.SparseMerkleProof();
    }

    public static types.Proof.SparseMerkleProof getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SparseMerkleProof>
        PARSER = new com.google.protobuf.AbstractParser<SparseMerkleProof>() {
      @java.lang.Override
      public SparseMerkleProof parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SparseMerkleProof(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SparseMerkleProof> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SparseMerkleProof> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public types.Proof.SparseMerkleProof getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AccumulatorConsistencyProofOrBuilder extends
      // @@protoc_insertion_point(interface_extends:types.AccumulatorConsistencyProof)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The root hashes of the frozen subtrees that form the small accumulator.
     * Note that none of these hashes should be default hash.
     * </pre>
     *
     * <code>repeated bytes frozen_subtree_roots = 1;</code>
     */
    java.util.List<com.google.protobuf.ByteString> getFrozenSubtreeRootsList();
    /**
     * <pre>
     * The root hashes of the frozen subtrees that form the small accumulator.
     * Note that none of these hashes should be default hash.
     * </pre>
     *
     * <code>repeated bytes frozen_subtree_roots = 1;</code>
     */
    int getFrozenSubtreeRootsCount();
    /**
     * <pre>
     * The root hashes of the frozen subtrees that form the small accumulator.
     * Note that none of these hashes should be default hash.
     * </pre>
     *
     * <code>repeated bytes frozen_subtree_roots = 1;</code>
     */
    com.google.protobuf.ByteString getFrozenSubtreeRoots(int index);

    /**
     * <pre>
     * The total number of siblings.
     * </pre>
     *
     * <code>uint32 num_siblings = 2;</code>
     */
    int getNumSiblings();

    /**
     * <pre>
     * The non-default siblings. Note that the entire list of siblings always
     * start of zero or more non-default siblings, followed by zero of more
     * default siblings. So given the total number of siblings and the non-default
     * siblings we should be able to construct the entire sibling list.
     * </pre>
     *
     * <code>repeated bytes non_default_siblings = 3;</code>
     */
    java.util.List<com.google.protobuf.ByteString> getNonDefaultSiblingsList();
    /**
     * <pre>
     * The non-default siblings. Note that the entire list of siblings always
     * start of zero or more non-default siblings, followed by zero of more
     * default siblings. So given the total number of siblings and the non-default
     * siblings we should be able to construct the entire sibling list.
     * </pre>
     *
     * <code>repeated bytes non_default_siblings = 3;</code>
     */
    int getNonDefaultSiblingsCount();
    /**
     * <pre>
     * The non-default siblings. Note that the entire list of siblings always
     * start of zero or more non-default siblings, followed by zero of more
     * default siblings. So given the total number of siblings and the non-default
     * siblings we should be able to construct the entire sibling list.
     * </pre>
     *
     * <code>repeated bytes non_default_siblings = 3;</code>
     */
    com.google.protobuf.ByteString getNonDefaultSiblings(int index);
  }
  /**
   * Protobuf type {@code types.AccumulatorConsistencyProof}
   */
  public  static final class AccumulatorConsistencyProof extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:types.AccumulatorConsistencyProof)
      AccumulatorConsistencyProofOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AccumulatorConsistencyProof.newBuilder() to construct.
    private AccumulatorConsistencyProof(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AccumulatorConsistencyProof() {
      frozenSubtreeRoots_ = java.util.Collections.emptyList();
      nonDefaultSiblings_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AccumulatorConsistencyProof(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                frozenSubtreeRoots_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000001;
              }
              frozenSubtreeRoots_.add(input.readBytes());
              break;
            }
            case 16: {

              numSiblings_ = input.readUInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                nonDefaultSiblings_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000004;
              }
              nonDefaultSiblings_.add(input.readBytes());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          frozenSubtreeRoots_ = java.util.Collections.unmodifiableList(frozenSubtreeRoots_); // C
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          nonDefaultSiblings_ = java.util.Collections.unmodifiableList(nonDefaultSiblings_); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return types.Proof.internal_static_types_AccumulatorConsistencyProof_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return types.Proof.internal_static_types_AccumulatorConsistencyProof_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              types.Proof.AccumulatorConsistencyProof.class, types.Proof.AccumulatorConsistencyProof.Builder.class);
    }

    private int bitField0_;
    public static final int FROZEN_SUBTREE_ROOTS_FIELD_NUMBER = 1;
    private java.util.List<com.google.protobuf.ByteString> frozenSubtreeRoots_;
    /**
     * <pre>
     * The root hashes of the frozen subtrees that form the small accumulator.
     * Note that none of these hashes should be default hash.
     * </pre>
     *
     * <code>repeated bytes frozen_subtree_roots = 1;</code>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getFrozenSubtreeRootsList() {
      return frozenSubtreeRoots_;
    }
    /**
     * <pre>
     * The root hashes of the frozen subtrees that form the small accumulator.
     * Note that none of these hashes should be default hash.
     * </pre>
     *
     * <code>repeated bytes frozen_subtree_roots = 1;</code>
     */
    public int getFrozenSubtreeRootsCount() {
      return frozenSubtreeRoots_.size();
    }
    /**
     * <pre>
     * The root hashes of the frozen subtrees that form the small accumulator.
     * Note that none of these hashes should be default hash.
     * </pre>
     *
     * <code>repeated bytes frozen_subtree_roots = 1;</code>
     */
    public com.google.protobuf.ByteString getFrozenSubtreeRoots(int index) {
      return frozenSubtreeRoots_.get(index);
    }

    public static final int NUM_SIBLINGS_FIELD_NUMBER = 2;
    private int numSiblings_;
    /**
     * <pre>
     * The total number of siblings.
     * </pre>
     *
     * <code>uint32 num_siblings = 2;</code>
     */
    public int getNumSiblings() {
      return numSiblings_;
    }

    public static final int NON_DEFAULT_SIBLINGS_FIELD_NUMBER = 3;
    private java.util.List<com.google.protobuf.ByteString> nonDefaultSiblings_;
    /**
     * <pre>
     * The non-default siblings. Note that the entire list of siblings always
     * start of zero or more non-default siblings, followed by zero of more
     * default siblings. So given the total number of siblings and the non-default
     * siblings we should be able to construct the entire sibling list.
     * </pre>
     *
     * <code>repeated bytes non_default_siblings = 3;</code>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getNonDefaultSiblingsList() {
      return nonDefaultSiblings_;
    }
    /**
     * <pre>
     * The non-default siblings. Note that the entire list of siblings always
     * start of zero or more non-default siblings, followed by zero of more
     * default siblings. So given the total number of siblings and the non-default
     * siblings we should be able to construct the entire sibling list.
     * </pre>
     *
     * <code>repeated bytes non_default_siblings = 3;</code>
     */
    public int getNonDefaultSiblingsCount() {
      return nonDefaultSiblings_.size();
    }
    /**
     * <pre>
     * The non-default siblings. Note that the entire list of siblings always
     * start of zero or more non-default siblings, followed by zero of more
     * default siblings. So given the total number of siblings and the non-default
     * siblings we should be able to construct the entire sibling list.
     * </pre>
     *
     * <code>repeated bytes non_default_siblings = 3;</code>
     */
    public com.google.protobuf.ByteString getNonDefaultSiblings(int index) {
      return nonDefaultSiblings_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < frozenSubtreeRoots_.size(); i++) {
        output.writeBytes(1, frozenSubtreeRoots_.get(i));
      }
      if (numSiblings_ != 0) {
        output.writeUInt32(2, numSiblings_);
      }
      for (int i = 0; i < nonDefaultSiblings_.size(); i++) {
        output.writeBytes(3, nonDefaultSiblings_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < frozenSubtreeRoots_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(frozenSubtreeRoots_.get(i));
        }
        size += dataSize;
        size += 1 * getFrozenSubtreeRootsList().size();
      }
      if (numSiblings_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, numSiblings_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < nonDefaultSiblings_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(nonDefaultSiblings_.get(i));
        }
        size += dataSize;
        size += 1 * getNonDefaultSiblingsList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof types.Proof.AccumulatorConsistencyProof)) {
        return super.equals(obj);
      }
      types.Proof.AccumulatorConsistencyProof other = (types.Proof.AccumulatorConsistencyProof) obj;

      if (!getFrozenSubtreeRootsList()
          .equals(other.getFrozenSubtreeRootsList())) return false;
      if (getNumSiblings()
          != other.getNumSiblings()) return false;
      if (!getNonDefaultSiblingsList()
          .equals(other.getNonDefaultSiblingsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getFrozenSubtreeRootsCount() > 0) {
        hash = (37 * hash) + FROZEN_SUBTREE_ROOTS_FIELD_NUMBER;
        hash = (53 * hash) + getFrozenSubtreeRootsList().hashCode();
      }
      hash = (37 * hash) + NUM_SIBLINGS_FIELD_NUMBER;
      hash = (53 * hash) + getNumSiblings();
      if (getNonDefaultSiblingsCount() > 0) {
        hash = (37 * hash) + NON_DEFAULT_SIBLINGS_FIELD_NUMBER;
        hash = (53 * hash) + getNonDefaultSiblingsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static types.Proof.AccumulatorConsistencyProof parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Proof.AccumulatorConsistencyProof parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Proof.AccumulatorConsistencyProof parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Proof.AccumulatorConsistencyProof parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Proof.AccumulatorConsistencyProof parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Proof.AccumulatorConsistencyProof parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Proof.AccumulatorConsistencyProof parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static types.Proof.AccumulatorConsistencyProof parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static types.Proof.AccumulatorConsistencyProof parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static types.Proof.AccumulatorConsistencyProof parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static types.Proof.AccumulatorConsistencyProof parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static types.Proof.AccumulatorConsistencyProof parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(types.Proof.AccumulatorConsistencyProof prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code types.AccumulatorConsistencyProof}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:types.AccumulatorConsistencyProof)
        types.Proof.AccumulatorConsistencyProofOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return types.Proof.internal_static_types_AccumulatorConsistencyProof_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return types.Proof.internal_static_types_AccumulatorConsistencyProof_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                types.Proof.AccumulatorConsistencyProof.class, types.Proof.AccumulatorConsistencyProof.Builder.class);
      }

      // Construct using types.Proof.AccumulatorConsistencyProof.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        frozenSubtreeRoots_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        numSiblings_ = 0;

        nonDefaultSiblings_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return types.Proof.internal_static_types_AccumulatorConsistencyProof_descriptor;
      }

      @java.lang.Override
      public types.Proof.AccumulatorConsistencyProof getDefaultInstanceForType() {
        return types.Proof.AccumulatorConsistencyProof.getDefaultInstance();
      }

      @java.lang.Override
      public types.Proof.AccumulatorConsistencyProof build() {
        types.Proof.AccumulatorConsistencyProof result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public types.Proof.AccumulatorConsistencyProof buildPartial() {
        types.Proof.AccumulatorConsistencyProof result = new types.Proof.AccumulatorConsistencyProof(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          frozenSubtreeRoots_ = java.util.Collections.unmodifiableList(frozenSubtreeRoots_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.frozenSubtreeRoots_ = frozenSubtreeRoots_;
        result.numSiblings_ = numSiblings_;
        if (((bitField0_ & 0x00000004) != 0)) {
          nonDefaultSiblings_ = java.util.Collections.unmodifiableList(nonDefaultSiblings_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.nonDefaultSiblings_ = nonDefaultSiblings_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof types.Proof.AccumulatorConsistencyProof) {
          return mergeFrom((types.Proof.AccumulatorConsistencyProof)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(types.Proof.AccumulatorConsistencyProof other) {
        if (other == types.Proof.AccumulatorConsistencyProof.getDefaultInstance()) return this;
        if (!other.frozenSubtreeRoots_.isEmpty()) {
          if (frozenSubtreeRoots_.isEmpty()) {
            frozenSubtreeRoots_ = other.frozenSubtreeRoots_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureFrozenSubtreeRootsIsMutable();
            frozenSubtreeRoots_.addAll(other.frozenSubtreeRoots_);
          }
          onChanged();
        }
        if (other.getNumSiblings() != 0) {
          setNumSiblings(other.getNumSiblings());
        }
        if (!other.nonDefaultSiblings_.isEmpty()) {
          if (nonDefaultSiblings_.isEmpty()) {
            nonDefaultSiblings_ = other.nonDefaultSiblings_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureNonDefaultSiblingsIsMutable();
            nonDefaultSiblings_.addAll(other.nonDefaultSiblings_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        types.Proof.AccumulatorConsistencyProof parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (types.Proof.AccumulatorConsistencyProof) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.google.protobuf.ByteString> frozenSubtreeRoots_ = java.util.Collections.emptyList();
      private void ensureFrozenSubtreeRootsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          frozenSubtreeRoots_ = new java.util.ArrayList<com.google.protobuf.ByteString>(frozenSubtreeRoots_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * The root hashes of the frozen subtrees that form the small accumulator.
       * Note that none of these hashes should be default hash.
       * </pre>
       *
       * <code>repeated bytes frozen_subtree_roots = 1;</code>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getFrozenSubtreeRootsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(frozenSubtreeRoots_) : frozenSubtreeRoots_;
      }
      /**
       * <pre>
       * The root hashes of the frozen subtrees that form the small accumulator.
       * Note that none of these hashes should be default hash.
       * </pre>
       *
       * <code>repeated bytes frozen_subtree_roots = 1;</code>
       */
      public int getFrozenSubtreeRootsCount() {
        return frozenSubtreeRoots_.size();
      }
      /**
       * <pre>
       * The root hashes of the frozen subtrees that form the small accumulator.
       * Note that none of these hashes should be default hash.
       * </pre>
       *
       * <code>repeated bytes frozen_subtree_roots = 1;</code>
       */
      public com.google.protobuf.ByteString getFrozenSubtreeRoots(int index) {
        return frozenSubtreeRoots_.get(index);
      }
      /**
       * <pre>
       * The root hashes of the frozen subtrees that form the small accumulator.
       * Note that none of these hashes should be default hash.
       * </pre>
       *
       * <code>repeated bytes frozen_subtree_roots = 1;</code>
       */
      public Builder setFrozenSubtreeRoots(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureFrozenSubtreeRootsIsMutable();
        frozenSubtreeRoots_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The root hashes of the frozen subtrees that form the small accumulator.
       * Note that none of these hashes should be default hash.
       * </pre>
       *
       * <code>repeated bytes frozen_subtree_roots = 1;</code>
       */
      public Builder addFrozenSubtreeRoots(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureFrozenSubtreeRootsIsMutable();
        frozenSubtreeRoots_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The root hashes of the frozen subtrees that form the small accumulator.
       * Note that none of these hashes should be default hash.
       * </pre>
       *
       * <code>repeated bytes frozen_subtree_roots = 1;</code>
       */
      public Builder addAllFrozenSubtreeRoots(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureFrozenSubtreeRootsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, frozenSubtreeRoots_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The root hashes of the frozen subtrees that form the small accumulator.
       * Note that none of these hashes should be default hash.
       * </pre>
       *
       * <code>repeated bytes frozen_subtree_roots = 1;</code>
       */
      public Builder clearFrozenSubtreeRoots() {
        frozenSubtreeRoots_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private int numSiblings_ ;
      /**
       * <pre>
       * The total number of siblings.
       * </pre>
       *
       * <code>uint32 num_siblings = 2;</code>
       */
      public int getNumSiblings() {
        return numSiblings_;
      }
      /**
       * <pre>
       * The total number of siblings.
       * </pre>
       *
       * <code>uint32 num_siblings = 2;</code>
       */
      public Builder setNumSiblings(int value) {
        
        numSiblings_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The total number of siblings.
       * </pre>
       *
       * <code>uint32 num_siblings = 2;</code>
       */
      public Builder clearNumSiblings() {
        
        numSiblings_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.google.protobuf.ByteString> nonDefaultSiblings_ = java.util.Collections.emptyList();
      private void ensureNonDefaultSiblingsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          nonDefaultSiblings_ = new java.util.ArrayList<com.google.protobuf.ByteString>(nonDefaultSiblings_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       * The non-default siblings. Note that the entire list of siblings always
       * start of zero or more non-default siblings, followed by zero of more
       * default siblings. So given the total number of siblings and the non-default
       * siblings we should be able to construct the entire sibling list.
       * </pre>
       *
       * <code>repeated bytes non_default_siblings = 3;</code>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getNonDefaultSiblingsList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(nonDefaultSiblings_) : nonDefaultSiblings_;
      }
      /**
       * <pre>
       * The non-default siblings. Note that the entire list of siblings always
       * start of zero or more non-default siblings, followed by zero of more
       * default siblings. So given the total number of siblings and the non-default
       * siblings we should be able to construct the entire sibling list.
       * </pre>
       *
       * <code>repeated bytes non_default_siblings = 3;</code>
       */
      public int getNonDefaultSiblingsCount() {
        return nonDefaultSiblings_.size();
      }
      /**
       * <pre>
       * The non-default siblings. Note that the entire list of siblings always
       * start of zero or more non-default siblings, followed by zero of more
       * default siblings. So given the total number of siblings and the non-default
       * siblings we should be able to construct the entire sibling list.
       * </pre>
       *
       * <code>repeated bytes non_default_siblings = 3;</code>
       */
      public com.google.protobuf.ByteString getNonDefaultSiblings(int index) {
        return nonDefaultSiblings_.get(index);
      }
      /**
       * <pre>
       * The non-default siblings. Note that the entire list of siblings always
       * start of zero or more non-default siblings, followed by zero of more
       * default siblings. So given the total number of siblings and the non-default
       * siblings we should be able to construct the entire sibling list.
       * </pre>
       *
       * <code>repeated bytes non_default_siblings = 3;</code>
       */
      public Builder setNonDefaultSiblings(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureNonDefaultSiblingsIsMutable();
        nonDefaultSiblings_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The non-default siblings. Note that the entire list of siblings always
       * start of zero or more non-default siblings, followed by zero of more
       * default siblings. So given the total number of siblings and the non-default
       * siblings we should be able to construct the entire sibling list.
       * </pre>
       *
       * <code>repeated bytes non_default_siblings = 3;</code>
       */
      public Builder addNonDefaultSiblings(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureNonDefaultSiblingsIsMutable();
        nonDefaultSiblings_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The non-default siblings. Note that the entire list of siblings always
       * start of zero or more non-default siblings, followed by zero of more
       * default siblings. So given the total number of siblings and the non-default
       * siblings we should be able to construct the entire sibling list.
       * </pre>
       *
       * <code>repeated bytes non_default_siblings = 3;</code>
       */
      public Builder addAllNonDefaultSiblings(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureNonDefaultSiblingsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, nonDefaultSiblings_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The non-default siblings. Note that the entire list of siblings always
       * start of zero or more non-default siblings, followed by zero of more
       * default siblings. So given the total number of siblings and the non-default
       * siblings we should be able to construct the entire sibling list.
       * </pre>
       *
       * <code>repeated bytes non_default_siblings = 3;</code>
       */
      public Builder clearNonDefaultSiblings() {
        nonDefaultSiblings_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:types.AccumulatorConsistencyProof)
    }

    // @@protoc_insertion_point(class_scope:types.AccumulatorConsistencyProof)
    private static final types.Proof.AccumulatorConsistencyProof DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new types.Proof.AccumulatorConsistencyProof();
    }

    public static types.Proof.AccumulatorConsistencyProof getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AccumulatorConsistencyProof>
        PARSER = new com.google.protobuf.AbstractParser<AccumulatorConsistencyProof>() {
      @java.lang.Override
      public AccumulatorConsistencyProof parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AccumulatorConsistencyProof(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AccumulatorConsistencyProof> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AccumulatorConsistencyProof> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public types.Proof.AccumulatorConsistencyProof getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignedTransactionProofOrBuilder extends
      // @@protoc_insertion_point(interface_extends:types.SignedTransactionProof)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
     */
    boolean hasLedgerInfoToTransactionInfoProof();
    /**
     * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
     */
    types.Proof.AccumulatorProof getLedgerInfoToTransactionInfoProof();
    /**
     * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
     */
    types.Proof.AccumulatorProofOrBuilder getLedgerInfoToTransactionInfoProofOrBuilder();

    /**
     * <code>.types.TransactionInfo transaction_info = 2;</code>
     */
    boolean hasTransactionInfo();
    /**
     * <code>.types.TransactionInfo transaction_info = 2;</code>
     */
    types.TransactionInfoOuterClass.TransactionInfo getTransactionInfo();
    /**
     * <code>.types.TransactionInfo transaction_info = 2;</code>
     */
    types.TransactionInfoOuterClass.TransactionInfoOrBuilder getTransactionInfoOrBuilder();
  }
  /**
   * <pre>
   * The complete proof used to authenticate a signed transaction.
   * </pre>
   *
   * Protobuf type {@code types.SignedTransactionProof}
   */
  public  static final class SignedTransactionProof extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:types.SignedTransactionProof)
      SignedTransactionProofOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignedTransactionProof.newBuilder() to construct.
    private SignedTransactionProof(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignedTransactionProof() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignedTransactionProof(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              types.Proof.AccumulatorProof.Builder subBuilder = null;
              if (ledgerInfoToTransactionInfoProof_ != null) {
                subBuilder = ledgerInfoToTransactionInfoProof_.toBuilder();
              }
              ledgerInfoToTransactionInfoProof_ = input.readMessage(types.Proof.AccumulatorProof.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ledgerInfoToTransactionInfoProof_);
                ledgerInfoToTransactionInfoProof_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              types.TransactionInfoOuterClass.TransactionInfo.Builder subBuilder = null;
              if (transactionInfo_ != null) {
                subBuilder = transactionInfo_.toBuilder();
              }
              transactionInfo_ = input.readMessage(types.TransactionInfoOuterClass.TransactionInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(transactionInfo_);
                transactionInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return types.Proof.internal_static_types_SignedTransactionProof_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return types.Proof.internal_static_types_SignedTransactionProof_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              types.Proof.SignedTransactionProof.class, types.Proof.SignedTransactionProof.Builder.class);
    }

    public static final int LEDGER_INFO_TO_TRANSACTION_INFO_PROOF_FIELD_NUMBER = 1;
    private types.Proof.AccumulatorProof ledgerInfoToTransactionInfoProof_;
    /**
     * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
     */
    public boolean hasLedgerInfoToTransactionInfoProof() {
      return ledgerInfoToTransactionInfoProof_ != null;
    }
    /**
     * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
     */
    public types.Proof.AccumulatorProof getLedgerInfoToTransactionInfoProof() {
      return ledgerInfoToTransactionInfoProof_ == null ? types.Proof.AccumulatorProof.getDefaultInstance() : ledgerInfoToTransactionInfoProof_;
    }
    /**
     * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
     */
    public types.Proof.AccumulatorProofOrBuilder getLedgerInfoToTransactionInfoProofOrBuilder() {
      return getLedgerInfoToTransactionInfoProof();
    }

    public static final int TRANSACTION_INFO_FIELD_NUMBER = 2;
    private types.TransactionInfoOuterClass.TransactionInfo transactionInfo_;
    /**
     * <code>.types.TransactionInfo transaction_info = 2;</code>
     */
    public boolean hasTransactionInfo() {
      return transactionInfo_ != null;
    }
    /**
     * <code>.types.TransactionInfo transaction_info = 2;</code>
     */
    public types.TransactionInfoOuterClass.TransactionInfo getTransactionInfo() {
      return transactionInfo_ == null ? types.TransactionInfoOuterClass.TransactionInfo.getDefaultInstance() : transactionInfo_;
    }
    /**
     * <code>.types.TransactionInfo transaction_info = 2;</code>
     */
    public types.TransactionInfoOuterClass.TransactionInfoOrBuilder getTransactionInfoOrBuilder() {
      return getTransactionInfo();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (ledgerInfoToTransactionInfoProof_ != null) {
        output.writeMessage(1, getLedgerInfoToTransactionInfoProof());
      }
      if (transactionInfo_ != null) {
        output.writeMessage(2, getTransactionInfo());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (ledgerInfoToTransactionInfoProof_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getLedgerInfoToTransactionInfoProof());
      }
      if (transactionInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTransactionInfo());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof types.Proof.SignedTransactionProof)) {
        return super.equals(obj);
      }
      types.Proof.SignedTransactionProof other = (types.Proof.SignedTransactionProof) obj;

      if (hasLedgerInfoToTransactionInfoProof() != other.hasLedgerInfoToTransactionInfoProof()) return false;
      if (hasLedgerInfoToTransactionInfoProof()) {
        if (!getLedgerInfoToTransactionInfoProof()
            .equals(other.getLedgerInfoToTransactionInfoProof())) return false;
      }
      if (hasTransactionInfo() != other.hasTransactionInfo()) return false;
      if (hasTransactionInfo()) {
        if (!getTransactionInfo()
            .equals(other.getTransactionInfo())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLedgerInfoToTransactionInfoProof()) {
        hash = (37 * hash) + LEDGER_INFO_TO_TRANSACTION_INFO_PROOF_FIELD_NUMBER;
        hash = (53 * hash) + getLedgerInfoToTransactionInfoProof().hashCode();
      }
      if (hasTransactionInfo()) {
        hash = (37 * hash) + TRANSACTION_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getTransactionInfo().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static types.Proof.SignedTransactionProof parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Proof.SignedTransactionProof parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Proof.SignedTransactionProof parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Proof.SignedTransactionProof parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Proof.SignedTransactionProof parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Proof.SignedTransactionProof parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Proof.SignedTransactionProof parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static types.Proof.SignedTransactionProof parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static types.Proof.SignedTransactionProof parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static types.Proof.SignedTransactionProof parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static types.Proof.SignedTransactionProof parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static types.Proof.SignedTransactionProof parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(types.Proof.SignedTransactionProof prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The complete proof used to authenticate a signed transaction.
     * </pre>
     *
     * Protobuf type {@code types.SignedTransactionProof}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:types.SignedTransactionProof)
        types.Proof.SignedTransactionProofOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return types.Proof.internal_static_types_SignedTransactionProof_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return types.Proof.internal_static_types_SignedTransactionProof_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                types.Proof.SignedTransactionProof.class, types.Proof.SignedTransactionProof.Builder.class);
      }

      // Construct using types.Proof.SignedTransactionProof.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (ledgerInfoToTransactionInfoProofBuilder_ == null) {
          ledgerInfoToTransactionInfoProof_ = null;
        } else {
          ledgerInfoToTransactionInfoProof_ = null;
          ledgerInfoToTransactionInfoProofBuilder_ = null;
        }
        if (transactionInfoBuilder_ == null) {
          transactionInfo_ = null;
        } else {
          transactionInfo_ = null;
          transactionInfoBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return types.Proof.internal_static_types_SignedTransactionProof_descriptor;
      }

      @java.lang.Override
      public types.Proof.SignedTransactionProof getDefaultInstanceForType() {
        return types.Proof.SignedTransactionProof.getDefaultInstance();
      }

      @java.lang.Override
      public types.Proof.SignedTransactionProof build() {
        types.Proof.SignedTransactionProof result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public types.Proof.SignedTransactionProof buildPartial() {
        types.Proof.SignedTransactionProof result = new types.Proof.SignedTransactionProof(this);
        if (ledgerInfoToTransactionInfoProofBuilder_ == null) {
          result.ledgerInfoToTransactionInfoProof_ = ledgerInfoToTransactionInfoProof_;
        } else {
          result.ledgerInfoToTransactionInfoProof_ = ledgerInfoToTransactionInfoProofBuilder_.build();
        }
        if (transactionInfoBuilder_ == null) {
          result.transactionInfo_ = transactionInfo_;
        } else {
          result.transactionInfo_ = transactionInfoBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof types.Proof.SignedTransactionProof) {
          return mergeFrom((types.Proof.SignedTransactionProof)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(types.Proof.SignedTransactionProof other) {
        if (other == types.Proof.SignedTransactionProof.getDefaultInstance()) return this;
        if (other.hasLedgerInfoToTransactionInfoProof()) {
          mergeLedgerInfoToTransactionInfoProof(other.getLedgerInfoToTransactionInfoProof());
        }
        if (other.hasTransactionInfo()) {
          mergeTransactionInfo(other.getTransactionInfo());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        types.Proof.SignedTransactionProof parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (types.Proof.SignedTransactionProof) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private types.Proof.AccumulatorProof ledgerInfoToTransactionInfoProof_;
      private com.google.protobuf.SingleFieldBuilderV3<
          types.Proof.AccumulatorProof, types.Proof.AccumulatorProof.Builder, types.Proof.AccumulatorProofOrBuilder> ledgerInfoToTransactionInfoProofBuilder_;
      /**
       * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
       */
      public boolean hasLedgerInfoToTransactionInfoProof() {
        return ledgerInfoToTransactionInfoProofBuilder_ != null || ledgerInfoToTransactionInfoProof_ != null;
      }
      /**
       * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
       */
      public types.Proof.AccumulatorProof getLedgerInfoToTransactionInfoProof() {
        if (ledgerInfoToTransactionInfoProofBuilder_ == null) {
          return ledgerInfoToTransactionInfoProof_ == null ? types.Proof.AccumulatorProof.getDefaultInstance() : ledgerInfoToTransactionInfoProof_;
        } else {
          return ledgerInfoToTransactionInfoProofBuilder_.getMessage();
        }
      }
      /**
       * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
       */
      public Builder setLedgerInfoToTransactionInfoProof(types.Proof.AccumulatorProof value) {
        if (ledgerInfoToTransactionInfoProofBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ledgerInfoToTransactionInfoProof_ = value;
          onChanged();
        } else {
          ledgerInfoToTransactionInfoProofBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
       */
      public Builder setLedgerInfoToTransactionInfoProof(
          types.Proof.AccumulatorProof.Builder builderForValue) {
        if (ledgerInfoToTransactionInfoProofBuilder_ == null) {
          ledgerInfoToTransactionInfoProof_ = builderForValue.build();
          onChanged();
        } else {
          ledgerInfoToTransactionInfoProofBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
       */
      public Builder mergeLedgerInfoToTransactionInfoProof(types.Proof.AccumulatorProof value) {
        if (ledgerInfoToTransactionInfoProofBuilder_ == null) {
          if (ledgerInfoToTransactionInfoProof_ != null) {
            ledgerInfoToTransactionInfoProof_ =
              types.Proof.AccumulatorProof.newBuilder(ledgerInfoToTransactionInfoProof_).mergeFrom(value).buildPartial();
          } else {
            ledgerInfoToTransactionInfoProof_ = value;
          }
          onChanged();
        } else {
          ledgerInfoToTransactionInfoProofBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
       */
      public Builder clearLedgerInfoToTransactionInfoProof() {
        if (ledgerInfoToTransactionInfoProofBuilder_ == null) {
          ledgerInfoToTransactionInfoProof_ = null;
          onChanged();
        } else {
          ledgerInfoToTransactionInfoProof_ = null;
          ledgerInfoToTransactionInfoProofBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
       */
      public types.Proof.AccumulatorProof.Builder getLedgerInfoToTransactionInfoProofBuilder() {
        
        onChanged();
        return getLedgerInfoToTransactionInfoProofFieldBuilder().getBuilder();
      }
      /**
       * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
       */
      public types.Proof.AccumulatorProofOrBuilder getLedgerInfoToTransactionInfoProofOrBuilder() {
        if (ledgerInfoToTransactionInfoProofBuilder_ != null) {
          return ledgerInfoToTransactionInfoProofBuilder_.getMessageOrBuilder();
        } else {
          return ledgerInfoToTransactionInfoProof_ == null ?
              types.Proof.AccumulatorProof.getDefaultInstance() : ledgerInfoToTransactionInfoProof_;
        }
      }
      /**
       * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          types.Proof.AccumulatorProof, types.Proof.AccumulatorProof.Builder, types.Proof.AccumulatorProofOrBuilder> 
          getLedgerInfoToTransactionInfoProofFieldBuilder() {
        if (ledgerInfoToTransactionInfoProofBuilder_ == null) {
          ledgerInfoToTransactionInfoProofBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              types.Proof.AccumulatorProof, types.Proof.AccumulatorProof.Builder, types.Proof.AccumulatorProofOrBuilder>(
                  getLedgerInfoToTransactionInfoProof(),
                  getParentForChildren(),
                  isClean());
          ledgerInfoToTransactionInfoProof_ = null;
        }
        return ledgerInfoToTransactionInfoProofBuilder_;
      }

      private types.TransactionInfoOuterClass.TransactionInfo transactionInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          types.TransactionInfoOuterClass.TransactionInfo, types.TransactionInfoOuterClass.TransactionInfo.Builder, types.TransactionInfoOuterClass.TransactionInfoOrBuilder> transactionInfoBuilder_;
      /**
       * <code>.types.TransactionInfo transaction_info = 2;</code>
       */
      public boolean hasTransactionInfo() {
        return transactionInfoBuilder_ != null || transactionInfo_ != null;
      }
      /**
       * <code>.types.TransactionInfo transaction_info = 2;</code>
       */
      public types.TransactionInfoOuterClass.TransactionInfo getTransactionInfo() {
        if (transactionInfoBuilder_ == null) {
          return transactionInfo_ == null ? types.TransactionInfoOuterClass.TransactionInfo.getDefaultInstance() : transactionInfo_;
        } else {
          return transactionInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>.types.TransactionInfo transaction_info = 2;</code>
       */
      public Builder setTransactionInfo(types.TransactionInfoOuterClass.TransactionInfo value) {
        if (transactionInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          transactionInfo_ = value;
          onChanged();
        } else {
          transactionInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.types.TransactionInfo transaction_info = 2;</code>
       */
      public Builder setTransactionInfo(
          types.TransactionInfoOuterClass.TransactionInfo.Builder builderForValue) {
        if (transactionInfoBuilder_ == null) {
          transactionInfo_ = builderForValue.build();
          onChanged();
        } else {
          transactionInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.types.TransactionInfo transaction_info = 2;</code>
       */
      public Builder mergeTransactionInfo(types.TransactionInfoOuterClass.TransactionInfo value) {
        if (transactionInfoBuilder_ == null) {
          if (transactionInfo_ != null) {
            transactionInfo_ =
              types.TransactionInfoOuterClass.TransactionInfo.newBuilder(transactionInfo_).mergeFrom(value).buildPartial();
          } else {
            transactionInfo_ = value;
          }
          onChanged();
        } else {
          transactionInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.types.TransactionInfo transaction_info = 2;</code>
       */
      public Builder clearTransactionInfo() {
        if (transactionInfoBuilder_ == null) {
          transactionInfo_ = null;
          onChanged();
        } else {
          transactionInfo_ = null;
          transactionInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.types.TransactionInfo transaction_info = 2;</code>
       */
      public types.TransactionInfoOuterClass.TransactionInfo.Builder getTransactionInfoBuilder() {
        
        onChanged();
        return getTransactionInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>.types.TransactionInfo transaction_info = 2;</code>
       */
      public types.TransactionInfoOuterClass.TransactionInfoOrBuilder getTransactionInfoOrBuilder() {
        if (transactionInfoBuilder_ != null) {
          return transactionInfoBuilder_.getMessageOrBuilder();
        } else {
          return transactionInfo_ == null ?
              types.TransactionInfoOuterClass.TransactionInfo.getDefaultInstance() : transactionInfo_;
        }
      }
      /**
       * <code>.types.TransactionInfo transaction_info = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          types.TransactionInfoOuterClass.TransactionInfo, types.TransactionInfoOuterClass.TransactionInfo.Builder, types.TransactionInfoOuterClass.TransactionInfoOrBuilder> 
          getTransactionInfoFieldBuilder() {
        if (transactionInfoBuilder_ == null) {
          transactionInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              types.TransactionInfoOuterClass.TransactionInfo, types.TransactionInfoOuterClass.TransactionInfo.Builder, types.TransactionInfoOuterClass.TransactionInfoOrBuilder>(
                  getTransactionInfo(),
                  getParentForChildren(),
                  isClean());
          transactionInfo_ = null;
        }
        return transactionInfoBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:types.SignedTransactionProof)
    }

    // @@protoc_insertion_point(class_scope:types.SignedTransactionProof)
    private static final types.Proof.SignedTransactionProof DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new types.Proof.SignedTransactionProof();
    }

    public static types.Proof.SignedTransactionProof getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignedTransactionProof>
        PARSER = new com.google.protobuf.AbstractParser<SignedTransactionProof>() {
      @java.lang.Override
      public SignedTransactionProof parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignedTransactionProof(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignedTransactionProof> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignedTransactionProof> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public types.Proof.SignedTransactionProof getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AccountStateProofOrBuilder extends
      // @@protoc_insertion_point(interface_extends:types.AccountStateProof)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
     */
    boolean hasLedgerInfoToTransactionInfoProof();
    /**
     * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
     */
    types.Proof.AccumulatorProof getLedgerInfoToTransactionInfoProof();
    /**
     * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
     */
    types.Proof.AccumulatorProofOrBuilder getLedgerInfoToTransactionInfoProofOrBuilder();

    /**
     * <code>.types.TransactionInfo transaction_info = 2;</code>
     */
    boolean hasTransactionInfo();
    /**
     * <code>.types.TransactionInfo transaction_info = 2;</code>
     */
    types.TransactionInfoOuterClass.TransactionInfo getTransactionInfo();
    /**
     * <code>.types.TransactionInfo transaction_info = 2;</code>
     */
    types.TransactionInfoOuterClass.TransactionInfoOrBuilder getTransactionInfoOrBuilder();

    /**
     * <code>.types.SparseMerkleProof transaction_info_to_account_proof = 3;</code>
     */
    boolean hasTransactionInfoToAccountProof();
    /**
     * <code>.types.SparseMerkleProof transaction_info_to_account_proof = 3;</code>
     */
    types.Proof.SparseMerkleProof getTransactionInfoToAccountProof();
    /**
     * <code>.types.SparseMerkleProof transaction_info_to_account_proof = 3;</code>
     */
    types.Proof.SparseMerkleProofOrBuilder getTransactionInfoToAccountProofOrBuilder();
  }
  /**
   * <pre>
   * The complete proof used to authenticate an account state.
   * </pre>
   *
   * Protobuf type {@code types.AccountStateProof}
   */
  public  static final class AccountStateProof extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:types.AccountStateProof)
      AccountStateProofOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AccountStateProof.newBuilder() to construct.
    private AccountStateProof(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AccountStateProof() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AccountStateProof(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              types.Proof.AccumulatorProof.Builder subBuilder = null;
              if (ledgerInfoToTransactionInfoProof_ != null) {
                subBuilder = ledgerInfoToTransactionInfoProof_.toBuilder();
              }
              ledgerInfoToTransactionInfoProof_ = input.readMessage(types.Proof.AccumulatorProof.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ledgerInfoToTransactionInfoProof_);
                ledgerInfoToTransactionInfoProof_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              types.TransactionInfoOuterClass.TransactionInfo.Builder subBuilder = null;
              if (transactionInfo_ != null) {
                subBuilder = transactionInfo_.toBuilder();
              }
              transactionInfo_ = input.readMessage(types.TransactionInfoOuterClass.TransactionInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(transactionInfo_);
                transactionInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              types.Proof.SparseMerkleProof.Builder subBuilder = null;
              if (transactionInfoToAccountProof_ != null) {
                subBuilder = transactionInfoToAccountProof_.toBuilder();
              }
              transactionInfoToAccountProof_ = input.readMessage(types.Proof.SparseMerkleProof.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(transactionInfoToAccountProof_);
                transactionInfoToAccountProof_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return types.Proof.internal_static_types_AccountStateProof_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return types.Proof.internal_static_types_AccountStateProof_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              types.Proof.AccountStateProof.class, types.Proof.AccountStateProof.Builder.class);
    }

    public static final int LEDGER_INFO_TO_TRANSACTION_INFO_PROOF_FIELD_NUMBER = 1;
    private types.Proof.AccumulatorProof ledgerInfoToTransactionInfoProof_;
    /**
     * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
     */
    public boolean hasLedgerInfoToTransactionInfoProof() {
      return ledgerInfoToTransactionInfoProof_ != null;
    }
    /**
     * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
     */
    public types.Proof.AccumulatorProof getLedgerInfoToTransactionInfoProof() {
      return ledgerInfoToTransactionInfoProof_ == null ? types.Proof.AccumulatorProof.getDefaultInstance() : ledgerInfoToTransactionInfoProof_;
    }
    /**
     * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
     */
    public types.Proof.AccumulatorProofOrBuilder getLedgerInfoToTransactionInfoProofOrBuilder() {
      return getLedgerInfoToTransactionInfoProof();
    }

    public static final int TRANSACTION_INFO_FIELD_NUMBER = 2;
    private types.TransactionInfoOuterClass.TransactionInfo transactionInfo_;
    /**
     * <code>.types.TransactionInfo transaction_info = 2;</code>
     */
    public boolean hasTransactionInfo() {
      return transactionInfo_ != null;
    }
    /**
     * <code>.types.TransactionInfo transaction_info = 2;</code>
     */
    public types.TransactionInfoOuterClass.TransactionInfo getTransactionInfo() {
      return transactionInfo_ == null ? types.TransactionInfoOuterClass.TransactionInfo.getDefaultInstance() : transactionInfo_;
    }
    /**
     * <code>.types.TransactionInfo transaction_info = 2;</code>
     */
    public types.TransactionInfoOuterClass.TransactionInfoOrBuilder getTransactionInfoOrBuilder() {
      return getTransactionInfo();
    }

    public static final int TRANSACTION_INFO_TO_ACCOUNT_PROOF_FIELD_NUMBER = 3;
    private types.Proof.SparseMerkleProof transactionInfoToAccountProof_;
    /**
     * <code>.types.SparseMerkleProof transaction_info_to_account_proof = 3;</code>
     */
    public boolean hasTransactionInfoToAccountProof() {
      return transactionInfoToAccountProof_ != null;
    }
    /**
     * <code>.types.SparseMerkleProof transaction_info_to_account_proof = 3;</code>
     */
    public types.Proof.SparseMerkleProof getTransactionInfoToAccountProof() {
      return transactionInfoToAccountProof_ == null ? types.Proof.SparseMerkleProof.getDefaultInstance() : transactionInfoToAccountProof_;
    }
    /**
     * <code>.types.SparseMerkleProof transaction_info_to_account_proof = 3;</code>
     */
    public types.Proof.SparseMerkleProofOrBuilder getTransactionInfoToAccountProofOrBuilder() {
      return getTransactionInfoToAccountProof();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (ledgerInfoToTransactionInfoProof_ != null) {
        output.writeMessage(1, getLedgerInfoToTransactionInfoProof());
      }
      if (transactionInfo_ != null) {
        output.writeMessage(2, getTransactionInfo());
      }
      if (transactionInfoToAccountProof_ != null) {
        output.writeMessage(3, getTransactionInfoToAccountProof());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (ledgerInfoToTransactionInfoProof_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getLedgerInfoToTransactionInfoProof());
      }
      if (transactionInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTransactionInfo());
      }
      if (transactionInfoToAccountProof_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getTransactionInfoToAccountProof());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof types.Proof.AccountStateProof)) {
        return super.equals(obj);
      }
      types.Proof.AccountStateProof other = (types.Proof.AccountStateProof) obj;

      if (hasLedgerInfoToTransactionInfoProof() != other.hasLedgerInfoToTransactionInfoProof()) return false;
      if (hasLedgerInfoToTransactionInfoProof()) {
        if (!getLedgerInfoToTransactionInfoProof()
            .equals(other.getLedgerInfoToTransactionInfoProof())) return false;
      }
      if (hasTransactionInfo() != other.hasTransactionInfo()) return false;
      if (hasTransactionInfo()) {
        if (!getTransactionInfo()
            .equals(other.getTransactionInfo())) return false;
      }
      if (hasTransactionInfoToAccountProof() != other.hasTransactionInfoToAccountProof()) return false;
      if (hasTransactionInfoToAccountProof()) {
        if (!getTransactionInfoToAccountProof()
            .equals(other.getTransactionInfoToAccountProof())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLedgerInfoToTransactionInfoProof()) {
        hash = (37 * hash) + LEDGER_INFO_TO_TRANSACTION_INFO_PROOF_FIELD_NUMBER;
        hash = (53 * hash) + getLedgerInfoToTransactionInfoProof().hashCode();
      }
      if (hasTransactionInfo()) {
        hash = (37 * hash) + TRANSACTION_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getTransactionInfo().hashCode();
      }
      if (hasTransactionInfoToAccountProof()) {
        hash = (37 * hash) + TRANSACTION_INFO_TO_ACCOUNT_PROOF_FIELD_NUMBER;
        hash = (53 * hash) + getTransactionInfoToAccountProof().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static types.Proof.AccountStateProof parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Proof.AccountStateProof parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Proof.AccountStateProof parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Proof.AccountStateProof parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Proof.AccountStateProof parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Proof.AccountStateProof parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Proof.AccountStateProof parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static types.Proof.AccountStateProof parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static types.Proof.AccountStateProof parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static types.Proof.AccountStateProof parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static types.Proof.AccountStateProof parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static types.Proof.AccountStateProof parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(types.Proof.AccountStateProof prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The complete proof used to authenticate an account state.
     * </pre>
     *
     * Protobuf type {@code types.AccountStateProof}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:types.AccountStateProof)
        types.Proof.AccountStateProofOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return types.Proof.internal_static_types_AccountStateProof_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return types.Proof.internal_static_types_AccountStateProof_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                types.Proof.AccountStateProof.class, types.Proof.AccountStateProof.Builder.class);
      }

      // Construct using types.Proof.AccountStateProof.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (ledgerInfoToTransactionInfoProofBuilder_ == null) {
          ledgerInfoToTransactionInfoProof_ = null;
        } else {
          ledgerInfoToTransactionInfoProof_ = null;
          ledgerInfoToTransactionInfoProofBuilder_ = null;
        }
        if (transactionInfoBuilder_ == null) {
          transactionInfo_ = null;
        } else {
          transactionInfo_ = null;
          transactionInfoBuilder_ = null;
        }
        if (transactionInfoToAccountProofBuilder_ == null) {
          transactionInfoToAccountProof_ = null;
        } else {
          transactionInfoToAccountProof_ = null;
          transactionInfoToAccountProofBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return types.Proof.internal_static_types_AccountStateProof_descriptor;
      }

      @java.lang.Override
      public types.Proof.AccountStateProof getDefaultInstanceForType() {
        return types.Proof.AccountStateProof.getDefaultInstance();
      }

      @java.lang.Override
      public types.Proof.AccountStateProof build() {
        types.Proof.AccountStateProof result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public types.Proof.AccountStateProof buildPartial() {
        types.Proof.AccountStateProof result = new types.Proof.AccountStateProof(this);
        if (ledgerInfoToTransactionInfoProofBuilder_ == null) {
          result.ledgerInfoToTransactionInfoProof_ = ledgerInfoToTransactionInfoProof_;
        } else {
          result.ledgerInfoToTransactionInfoProof_ = ledgerInfoToTransactionInfoProofBuilder_.build();
        }
        if (transactionInfoBuilder_ == null) {
          result.transactionInfo_ = transactionInfo_;
        } else {
          result.transactionInfo_ = transactionInfoBuilder_.build();
        }
        if (transactionInfoToAccountProofBuilder_ == null) {
          result.transactionInfoToAccountProof_ = transactionInfoToAccountProof_;
        } else {
          result.transactionInfoToAccountProof_ = transactionInfoToAccountProofBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof types.Proof.AccountStateProof) {
          return mergeFrom((types.Proof.AccountStateProof)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(types.Proof.AccountStateProof other) {
        if (other == types.Proof.AccountStateProof.getDefaultInstance()) return this;
        if (other.hasLedgerInfoToTransactionInfoProof()) {
          mergeLedgerInfoToTransactionInfoProof(other.getLedgerInfoToTransactionInfoProof());
        }
        if (other.hasTransactionInfo()) {
          mergeTransactionInfo(other.getTransactionInfo());
        }
        if (other.hasTransactionInfoToAccountProof()) {
          mergeTransactionInfoToAccountProof(other.getTransactionInfoToAccountProof());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        types.Proof.AccountStateProof parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (types.Proof.AccountStateProof) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private types.Proof.AccumulatorProof ledgerInfoToTransactionInfoProof_;
      private com.google.protobuf.SingleFieldBuilderV3<
          types.Proof.AccumulatorProof, types.Proof.AccumulatorProof.Builder, types.Proof.AccumulatorProofOrBuilder> ledgerInfoToTransactionInfoProofBuilder_;
      /**
       * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
       */
      public boolean hasLedgerInfoToTransactionInfoProof() {
        return ledgerInfoToTransactionInfoProofBuilder_ != null || ledgerInfoToTransactionInfoProof_ != null;
      }
      /**
       * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
       */
      public types.Proof.AccumulatorProof getLedgerInfoToTransactionInfoProof() {
        if (ledgerInfoToTransactionInfoProofBuilder_ == null) {
          return ledgerInfoToTransactionInfoProof_ == null ? types.Proof.AccumulatorProof.getDefaultInstance() : ledgerInfoToTransactionInfoProof_;
        } else {
          return ledgerInfoToTransactionInfoProofBuilder_.getMessage();
        }
      }
      /**
       * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
       */
      public Builder setLedgerInfoToTransactionInfoProof(types.Proof.AccumulatorProof value) {
        if (ledgerInfoToTransactionInfoProofBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ledgerInfoToTransactionInfoProof_ = value;
          onChanged();
        } else {
          ledgerInfoToTransactionInfoProofBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
       */
      public Builder setLedgerInfoToTransactionInfoProof(
          types.Proof.AccumulatorProof.Builder builderForValue) {
        if (ledgerInfoToTransactionInfoProofBuilder_ == null) {
          ledgerInfoToTransactionInfoProof_ = builderForValue.build();
          onChanged();
        } else {
          ledgerInfoToTransactionInfoProofBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
       */
      public Builder mergeLedgerInfoToTransactionInfoProof(types.Proof.AccumulatorProof value) {
        if (ledgerInfoToTransactionInfoProofBuilder_ == null) {
          if (ledgerInfoToTransactionInfoProof_ != null) {
            ledgerInfoToTransactionInfoProof_ =
              types.Proof.AccumulatorProof.newBuilder(ledgerInfoToTransactionInfoProof_).mergeFrom(value).buildPartial();
          } else {
            ledgerInfoToTransactionInfoProof_ = value;
          }
          onChanged();
        } else {
          ledgerInfoToTransactionInfoProofBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
       */
      public Builder clearLedgerInfoToTransactionInfoProof() {
        if (ledgerInfoToTransactionInfoProofBuilder_ == null) {
          ledgerInfoToTransactionInfoProof_ = null;
          onChanged();
        } else {
          ledgerInfoToTransactionInfoProof_ = null;
          ledgerInfoToTransactionInfoProofBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
       */
      public types.Proof.AccumulatorProof.Builder getLedgerInfoToTransactionInfoProofBuilder() {
        
        onChanged();
        return getLedgerInfoToTransactionInfoProofFieldBuilder().getBuilder();
      }
      /**
       * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
       */
      public types.Proof.AccumulatorProofOrBuilder getLedgerInfoToTransactionInfoProofOrBuilder() {
        if (ledgerInfoToTransactionInfoProofBuilder_ != null) {
          return ledgerInfoToTransactionInfoProofBuilder_.getMessageOrBuilder();
        } else {
          return ledgerInfoToTransactionInfoProof_ == null ?
              types.Proof.AccumulatorProof.getDefaultInstance() : ledgerInfoToTransactionInfoProof_;
        }
      }
      /**
       * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          types.Proof.AccumulatorProof, types.Proof.AccumulatorProof.Builder, types.Proof.AccumulatorProofOrBuilder> 
          getLedgerInfoToTransactionInfoProofFieldBuilder() {
        if (ledgerInfoToTransactionInfoProofBuilder_ == null) {
          ledgerInfoToTransactionInfoProofBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              types.Proof.AccumulatorProof, types.Proof.AccumulatorProof.Builder, types.Proof.AccumulatorProofOrBuilder>(
                  getLedgerInfoToTransactionInfoProof(),
                  getParentForChildren(),
                  isClean());
          ledgerInfoToTransactionInfoProof_ = null;
        }
        return ledgerInfoToTransactionInfoProofBuilder_;
      }

      private types.TransactionInfoOuterClass.TransactionInfo transactionInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          types.TransactionInfoOuterClass.TransactionInfo, types.TransactionInfoOuterClass.TransactionInfo.Builder, types.TransactionInfoOuterClass.TransactionInfoOrBuilder> transactionInfoBuilder_;
      /**
       * <code>.types.TransactionInfo transaction_info = 2;</code>
       */
      public boolean hasTransactionInfo() {
        return transactionInfoBuilder_ != null || transactionInfo_ != null;
      }
      /**
       * <code>.types.TransactionInfo transaction_info = 2;</code>
       */
      public types.TransactionInfoOuterClass.TransactionInfo getTransactionInfo() {
        if (transactionInfoBuilder_ == null) {
          return transactionInfo_ == null ? types.TransactionInfoOuterClass.TransactionInfo.getDefaultInstance() : transactionInfo_;
        } else {
          return transactionInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>.types.TransactionInfo transaction_info = 2;</code>
       */
      public Builder setTransactionInfo(types.TransactionInfoOuterClass.TransactionInfo value) {
        if (transactionInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          transactionInfo_ = value;
          onChanged();
        } else {
          transactionInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.types.TransactionInfo transaction_info = 2;</code>
       */
      public Builder setTransactionInfo(
          types.TransactionInfoOuterClass.TransactionInfo.Builder builderForValue) {
        if (transactionInfoBuilder_ == null) {
          transactionInfo_ = builderForValue.build();
          onChanged();
        } else {
          transactionInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.types.TransactionInfo transaction_info = 2;</code>
       */
      public Builder mergeTransactionInfo(types.TransactionInfoOuterClass.TransactionInfo value) {
        if (transactionInfoBuilder_ == null) {
          if (transactionInfo_ != null) {
            transactionInfo_ =
              types.TransactionInfoOuterClass.TransactionInfo.newBuilder(transactionInfo_).mergeFrom(value).buildPartial();
          } else {
            transactionInfo_ = value;
          }
          onChanged();
        } else {
          transactionInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.types.TransactionInfo transaction_info = 2;</code>
       */
      public Builder clearTransactionInfo() {
        if (transactionInfoBuilder_ == null) {
          transactionInfo_ = null;
          onChanged();
        } else {
          transactionInfo_ = null;
          transactionInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.types.TransactionInfo transaction_info = 2;</code>
       */
      public types.TransactionInfoOuterClass.TransactionInfo.Builder getTransactionInfoBuilder() {
        
        onChanged();
        return getTransactionInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>.types.TransactionInfo transaction_info = 2;</code>
       */
      public types.TransactionInfoOuterClass.TransactionInfoOrBuilder getTransactionInfoOrBuilder() {
        if (transactionInfoBuilder_ != null) {
          return transactionInfoBuilder_.getMessageOrBuilder();
        } else {
          return transactionInfo_ == null ?
              types.TransactionInfoOuterClass.TransactionInfo.getDefaultInstance() : transactionInfo_;
        }
      }
      /**
       * <code>.types.TransactionInfo transaction_info = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          types.TransactionInfoOuterClass.TransactionInfo, types.TransactionInfoOuterClass.TransactionInfo.Builder, types.TransactionInfoOuterClass.TransactionInfoOrBuilder> 
          getTransactionInfoFieldBuilder() {
        if (transactionInfoBuilder_ == null) {
          transactionInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              types.TransactionInfoOuterClass.TransactionInfo, types.TransactionInfoOuterClass.TransactionInfo.Builder, types.TransactionInfoOuterClass.TransactionInfoOrBuilder>(
                  getTransactionInfo(),
                  getParentForChildren(),
                  isClean());
          transactionInfo_ = null;
        }
        return transactionInfoBuilder_;
      }

      private types.Proof.SparseMerkleProof transactionInfoToAccountProof_;
      private com.google.protobuf.SingleFieldBuilderV3<
          types.Proof.SparseMerkleProof, types.Proof.SparseMerkleProof.Builder, types.Proof.SparseMerkleProofOrBuilder> transactionInfoToAccountProofBuilder_;
      /**
       * <code>.types.SparseMerkleProof transaction_info_to_account_proof = 3;</code>
       */
      public boolean hasTransactionInfoToAccountProof() {
        return transactionInfoToAccountProofBuilder_ != null || transactionInfoToAccountProof_ != null;
      }
      /**
       * <code>.types.SparseMerkleProof transaction_info_to_account_proof = 3;</code>
       */
      public types.Proof.SparseMerkleProof getTransactionInfoToAccountProof() {
        if (transactionInfoToAccountProofBuilder_ == null) {
          return transactionInfoToAccountProof_ == null ? types.Proof.SparseMerkleProof.getDefaultInstance() : transactionInfoToAccountProof_;
        } else {
          return transactionInfoToAccountProofBuilder_.getMessage();
        }
      }
      /**
       * <code>.types.SparseMerkleProof transaction_info_to_account_proof = 3;</code>
       */
      public Builder setTransactionInfoToAccountProof(types.Proof.SparseMerkleProof value) {
        if (transactionInfoToAccountProofBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          transactionInfoToAccountProof_ = value;
          onChanged();
        } else {
          transactionInfoToAccountProofBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.types.SparseMerkleProof transaction_info_to_account_proof = 3;</code>
       */
      public Builder setTransactionInfoToAccountProof(
          types.Proof.SparseMerkleProof.Builder builderForValue) {
        if (transactionInfoToAccountProofBuilder_ == null) {
          transactionInfoToAccountProof_ = builderForValue.build();
          onChanged();
        } else {
          transactionInfoToAccountProofBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.types.SparseMerkleProof transaction_info_to_account_proof = 3;</code>
       */
      public Builder mergeTransactionInfoToAccountProof(types.Proof.SparseMerkleProof value) {
        if (transactionInfoToAccountProofBuilder_ == null) {
          if (transactionInfoToAccountProof_ != null) {
            transactionInfoToAccountProof_ =
              types.Proof.SparseMerkleProof.newBuilder(transactionInfoToAccountProof_).mergeFrom(value).buildPartial();
          } else {
            transactionInfoToAccountProof_ = value;
          }
          onChanged();
        } else {
          transactionInfoToAccountProofBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.types.SparseMerkleProof transaction_info_to_account_proof = 3;</code>
       */
      public Builder clearTransactionInfoToAccountProof() {
        if (transactionInfoToAccountProofBuilder_ == null) {
          transactionInfoToAccountProof_ = null;
          onChanged();
        } else {
          transactionInfoToAccountProof_ = null;
          transactionInfoToAccountProofBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.types.SparseMerkleProof transaction_info_to_account_proof = 3;</code>
       */
      public types.Proof.SparseMerkleProof.Builder getTransactionInfoToAccountProofBuilder() {
        
        onChanged();
        return getTransactionInfoToAccountProofFieldBuilder().getBuilder();
      }
      /**
       * <code>.types.SparseMerkleProof transaction_info_to_account_proof = 3;</code>
       */
      public types.Proof.SparseMerkleProofOrBuilder getTransactionInfoToAccountProofOrBuilder() {
        if (transactionInfoToAccountProofBuilder_ != null) {
          return transactionInfoToAccountProofBuilder_.getMessageOrBuilder();
        } else {
          return transactionInfoToAccountProof_ == null ?
              types.Proof.SparseMerkleProof.getDefaultInstance() : transactionInfoToAccountProof_;
        }
      }
      /**
       * <code>.types.SparseMerkleProof transaction_info_to_account_proof = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          types.Proof.SparseMerkleProof, types.Proof.SparseMerkleProof.Builder, types.Proof.SparseMerkleProofOrBuilder> 
          getTransactionInfoToAccountProofFieldBuilder() {
        if (transactionInfoToAccountProofBuilder_ == null) {
          transactionInfoToAccountProofBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              types.Proof.SparseMerkleProof, types.Proof.SparseMerkleProof.Builder, types.Proof.SparseMerkleProofOrBuilder>(
                  getTransactionInfoToAccountProof(),
                  getParentForChildren(),
                  isClean());
          transactionInfoToAccountProof_ = null;
        }
        return transactionInfoToAccountProofBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:types.AccountStateProof)
    }

    // @@protoc_insertion_point(class_scope:types.AccountStateProof)
    private static final types.Proof.AccountStateProof DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new types.Proof.AccountStateProof();
    }

    public static types.Proof.AccountStateProof getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AccountStateProof>
        PARSER = new com.google.protobuf.AbstractParser<AccountStateProof>() {
      @java.lang.Override
      public AccountStateProof parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AccountStateProof(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AccountStateProof> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AccountStateProof> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public types.Proof.AccountStateProof getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EventProofOrBuilder extends
      // @@protoc_insertion_point(interface_extends:types.EventProof)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
     */
    boolean hasLedgerInfoToTransactionInfoProof();
    /**
     * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
     */
    types.Proof.AccumulatorProof getLedgerInfoToTransactionInfoProof();
    /**
     * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
     */
    types.Proof.AccumulatorProofOrBuilder getLedgerInfoToTransactionInfoProofOrBuilder();

    /**
     * <code>.types.TransactionInfo transaction_info = 2;</code>
     */
    boolean hasTransactionInfo();
    /**
     * <code>.types.TransactionInfo transaction_info = 2;</code>
     */
    types.TransactionInfoOuterClass.TransactionInfo getTransactionInfo();
    /**
     * <code>.types.TransactionInfo transaction_info = 2;</code>
     */
    types.TransactionInfoOuterClass.TransactionInfoOrBuilder getTransactionInfoOrBuilder();

    /**
     * <code>.types.AccumulatorProof transaction_info_to_event_proof = 3;</code>
     */
    boolean hasTransactionInfoToEventProof();
    /**
     * <code>.types.AccumulatorProof transaction_info_to_event_proof = 3;</code>
     */
    types.Proof.AccumulatorProof getTransactionInfoToEventProof();
    /**
     * <code>.types.AccumulatorProof transaction_info_to_event_proof = 3;</code>
     */
    types.Proof.AccumulatorProofOrBuilder getTransactionInfoToEventProofOrBuilder();
  }
  /**
   * <pre>
   * The complete proof used to authenticate an event.
   * </pre>
   *
   * Protobuf type {@code types.EventProof}
   */
  public  static final class EventProof extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:types.EventProof)
      EventProofOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EventProof.newBuilder() to construct.
    private EventProof(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EventProof() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private EventProof(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              types.Proof.AccumulatorProof.Builder subBuilder = null;
              if (ledgerInfoToTransactionInfoProof_ != null) {
                subBuilder = ledgerInfoToTransactionInfoProof_.toBuilder();
              }
              ledgerInfoToTransactionInfoProof_ = input.readMessage(types.Proof.AccumulatorProof.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ledgerInfoToTransactionInfoProof_);
                ledgerInfoToTransactionInfoProof_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              types.TransactionInfoOuterClass.TransactionInfo.Builder subBuilder = null;
              if (transactionInfo_ != null) {
                subBuilder = transactionInfo_.toBuilder();
              }
              transactionInfo_ = input.readMessage(types.TransactionInfoOuterClass.TransactionInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(transactionInfo_);
                transactionInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              types.Proof.AccumulatorProof.Builder subBuilder = null;
              if (transactionInfoToEventProof_ != null) {
                subBuilder = transactionInfoToEventProof_.toBuilder();
              }
              transactionInfoToEventProof_ = input.readMessage(types.Proof.AccumulatorProof.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(transactionInfoToEventProof_);
                transactionInfoToEventProof_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return types.Proof.internal_static_types_EventProof_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return types.Proof.internal_static_types_EventProof_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              types.Proof.EventProof.class, types.Proof.EventProof.Builder.class);
    }

    public static final int LEDGER_INFO_TO_TRANSACTION_INFO_PROOF_FIELD_NUMBER = 1;
    private types.Proof.AccumulatorProof ledgerInfoToTransactionInfoProof_;
    /**
     * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
     */
    public boolean hasLedgerInfoToTransactionInfoProof() {
      return ledgerInfoToTransactionInfoProof_ != null;
    }
    /**
     * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
     */
    public types.Proof.AccumulatorProof getLedgerInfoToTransactionInfoProof() {
      return ledgerInfoToTransactionInfoProof_ == null ? types.Proof.AccumulatorProof.getDefaultInstance() : ledgerInfoToTransactionInfoProof_;
    }
    /**
     * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
     */
    public types.Proof.AccumulatorProofOrBuilder getLedgerInfoToTransactionInfoProofOrBuilder() {
      return getLedgerInfoToTransactionInfoProof();
    }

    public static final int TRANSACTION_INFO_FIELD_NUMBER = 2;
    private types.TransactionInfoOuterClass.TransactionInfo transactionInfo_;
    /**
     * <code>.types.TransactionInfo transaction_info = 2;</code>
     */
    public boolean hasTransactionInfo() {
      return transactionInfo_ != null;
    }
    /**
     * <code>.types.TransactionInfo transaction_info = 2;</code>
     */
    public types.TransactionInfoOuterClass.TransactionInfo getTransactionInfo() {
      return transactionInfo_ == null ? types.TransactionInfoOuterClass.TransactionInfo.getDefaultInstance() : transactionInfo_;
    }
    /**
     * <code>.types.TransactionInfo transaction_info = 2;</code>
     */
    public types.TransactionInfoOuterClass.TransactionInfoOrBuilder getTransactionInfoOrBuilder() {
      return getTransactionInfo();
    }

    public static final int TRANSACTION_INFO_TO_EVENT_PROOF_FIELD_NUMBER = 3;
    private types.Proof.AccumulatorProof transactionInfoToEventProof_;
    /**
     * <code>.types.AccumulatorProof transaction_info_to_event_proof = 3;</code>
     */
    public boolean hasTransactionInfoToEventProof() {
      return transactionInfoToEventProof_ != null;
    }
    /**
     * <code>.types.AccumulatorProof transaction_info_to_event_proof = 3;</code>
     */
    public types.Proof.AccumulatorProof getTransactionInfoToEventProof() {
      return transactionInfoToEventProof_ == null ? types.Proof.AccumulatorProof.getDefaultInstance() : transactionInfoToEventProof_;
    }
    /**
     * <code>.types.AccumulatorProof transaction_info_to_event_proof = 3;</code>
     */
    public types.Proof.AccumulatorProofOrBuilder getTransactionInfoToEventProofOrBuilder() {
      return getTransactionInfoToEventProof();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (ledgerInfoToTransactionInfoProof_ != null) {
        output.writeMessage(1, getLedgerInfoToTransactionInfoProof());
      }
      if (transactionInfo_ != null) {
        output.writeMessage(2, getTransactionInfo());
      }
      if (transactionInfoToEventProof_ != null) {
        output.writeMessage(3, getTransactionInfoToEventProof());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (ledgerInfoToTransactionInfoProof_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getLedgerInfoToTransactionInfoProof());
      }
      if (transactionInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTransactionInfo());
      }
      if (transactionInfoToEventProof_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getTransactionInfoToEventProof());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof types.Proof.EventProof)) {
        return super.equals(obj);
      }
      types.Proof.EventProof other = (types.Proof.EventProof) obj;

      if (hasLedgerInfoToTransactionInfoProof() != other.hasLedgerInfoToTransactionInfoProof()) return false;
      if (hasLedgerInfoToTransactionInfoProof()) {
        if (!getLedgerInfoToTransactionInfoProof()
            .equals(other.getLedgerInfoToTransactionInfoProof())) return false;
      }
      if (hasTransactionInfo() != other.hasTransactionInfo()) return false;
      if (hasTransactionInfo()) {
        if (!getTransactionInfo()
            .equals(other.getTransactionInfo())) return false;
      }
      if (hasTransactionInfoToEventProof() != other.hasTransactionInfoToEventProof()) return false;
      if (hasTransactionInfoToEventProof()) {
        if (!getTransactionInfoToEventProof()
            .equals(other.getTransactionInfoToEventProof())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLedgerInfoToTransactionInfoProof()) {
        hash = (37 * hash) + LEDGER_INFO_TO_TRANSACTION_INFO_PROOF_FIELD_NUMBER;
        hash = (53 * hash) + getLedgerInfoToTransactionInfoProof().hashCode();
      }
      if (hasTransactionInfo()) {
        hash = (37 * hash) + TRANSACTION_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getTransactionInfo().hashCode();
      }
      if (hasTransactionInfoToEventProof()) {
        hash = (37 * hash) + TRANSACTION_INFO_TO_EVENT_PROOF_FIELD_NUMBER;
        hash = (53 * hash) + getTransactionInfoToEventProof().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static types.Proof.EventProof parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Proof.EventProof parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Proof.EventProof parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Proof.EventProof parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Proof.EventProof parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Proof.EventProof parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Proof.EventProof parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static types.Proof.EventProof parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static types.Proof.EventProof parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static types.Proof.EventProof parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static types.Proof.EventProof parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static types.Proof.EventProof parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(types.Proof.EventProof prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The complete proof used to authenticate an event.
     * </pre>
     *
     * Protobuf type {@code types.EventProof}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:types.EventProof)
        types.Proof.EventProofOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return types.Proof.internal_static_types_EventProof_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return types.Proof.internal_static_types_EventProof_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                types.Proof.EventProof.class, types.Proof.EventProof.Builder.class);
      }

      // Construct using types.Proof.EventProof.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (ledgerInfoToTransactionInfoProofBuilder_ == null) {
          ledgerInfoToTransactionInfoProof_ = null;
        } else {
          ledgerInfoToTransactionInfoProof_ = null;
          ledgerInfoToTransactionInfoProofBuilder_ = null;
        }
        if (transactionInfoBuilder_ == null) {
          transactionInfo_ = null;
        } else {
          transactionInfo_ = null;
          transactionInfoBuilder_ = null;
        }
        if (transactionInfoToEventProofBuilder_ == null) {
          transactionInfoToEventProof_ = null;
        } else {
          transactionInfoToEventProof_ = null;
          transactionInfoToEventProofBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return types.Proof.internal_static_types_EventProof_descriptor;
      }

      @java.lang.Override
      public types.Proof.EventProof getDefaultInstanceForType() {
        return types.Proof.EventProof.getDefaultInstance();
      }

      @java.lang.Override
      public types.Proof.EventProof build() {
        types.Proof.EventProof result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public types.Proof.EventProof buildPartial() {
        types.Proof.EventProof result = new types.Proof.EventProof(this);
        if (ledgerInfoToTransactionInfoProofBuilder_ == null) {
          result.ledgerInfoToTransactionInfoProof_ = ledgerInfoToTransactionInfoProof_;
        } else {
          result.ledgerInfoToTransactionInfoProof_ = ledgerInfoToTransactionInfoProofBuilder_.build();
        }
        if (transactionInfoBuilder_ == null) {
          result.transactionInfo_ = transactionInfo_;
        } else {
          result.transactionInfo_ = transactionInfoBuilder_.build();
        }
        if (transactionInfoToEventProofBuilder_ == null) {
          result.transactionInfoToEventProof_ = transactionInfoToEventProof_;
        } else {
          result.transactionInfoToEventProof_ = transactionInfoToEventProofBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof types.Proof.EventProof) {
          return mergeFrom((types.Proof.EventProof)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(types.Proof.EventProof other) {
        if (other == types.Proof.EventProof.getDefaultInstance()) return this;
        if (other.hasLedgerInfoToTransactionInfoProof()) {
          mergeLedgerInfoToTransactionInfoProof(other.getLedgerInfoToTransactionInfoProof());
        }
        if (other.hasTransactionInfo()) {
          mergeTransactionInfo(other.getTransactionInfo());
        }
        if (other.hasTransactionInfoToEventProof()) {
          mergeTransactionInfoToEventProof(other.getTransactionInfoToEventProof());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        types.Proof.EventProof parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (types.Proof.EventProof) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private types.Proof.AccumulatorProof ledgerInfoToTransactionInfoProof_;
      private com.google.protobuf.SingleFieldBuilderV3<
          types.Proof.AccumulatorProof, types.Proof.AccumulatorProof.Builder, types.Proof.AccumulatorProofOrBuilder> ledgerInfoToTransactionInfoProofBuilder_;
      /**
       * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
       */
      public boolean hasLedgerInfoToTransactionInfoProof() {
        return ledgerInfoToTransactionInfoProofBuilder_ != null || ledgerInfoToTransactionInfoProof_ != null;
      }
      /**
       * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
       */
      public types.Proof.AccumulatorProof getLedgerInfoToTransactionInfoProof() {
        if (ledgerInfoToTransactionInfoProofBuilder_ == null) {
          return ledgerInfoToTransactionInfoProof_ == null ? types.Proof.AccumulatorProof.getDefaultInstance() : ledgerInfoToTransactionInfoProof_;
        } else {
          return ledgerInfoToTransactionInfoProofBuilder_.getMessage();
        }
      }
      /**
       * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
       */
      public Builder setLedgerInfoToTransactionInfoProof(types.Proof.AccumulatorProof value) {
        if (ledgerInfoToTransactionInfoProofBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ledgerInfoToTransactionInfoProof_ = value;
          onChanged();
        } else {
          ledgerInfoToTransactionInfoProofBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
       */
      public Builder setLedgerInfoToTransactionInfoProof(
          types.Proof.AccumulatorProof.Builder builderForValue) {
        if (ledgerInfoToTransactionInfoProofBuilder_ == null) {
          ledgerInfoToTransactionInfoProof_ = builderForValue.build();
          onChanged();
        } else {
          ledgerInfoToTransactionInfoProofBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
       */
      public Builder mergeLedgerInfoToTransactionInfoProof(types.Proof.AccumulatorProof value) {
        if (ledgerInfoToTransactionInfoProofBuilder_ == null) {
          if (ledgerInfoToTransactionInfoProof_ != null) {
            ledgerInfoToTransactionInfoProof_ =
              types.Proof.AccumulatorProof.newBuilder(ledgerInfoToTransactionInfoProof_).mergeFrom(value).buildPartial();
          } else {
            ledgerInfoToTransactionInfoProof_ = value;
          }
          onChanged();
        } else {
          ledgerInfoToTransactionInfoProofBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
       */
      public Builder clearLedgerInfoToTransactionInfoProof() {
        if (ledgerInfoToTransactionInfoProofBuilder_ == null) {
          ledgerInfoToTransactionInfoProof_ = null;
          onChanged();
        } else {
          ledgerInfoToTransactionInfoProof_ = null;
          ledgerInfoToTransactionInfoProofBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
       */
      public types.Proof.AccumulatorProof.Builder getLedgerInfoToTransactionInfoProofBuilder() {
        
        onChanged();
        return getLedgerInfoToTransactionInfoProofFieldBuilder().getBuilder();
      }
      /**
       * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
       */
      public types.Proof.AccumulatorProofOrBuilder getLedgerInfoToTransactionInfoProofOrBuilder() {
        if (ledgerInfoToTransactionInfoProofBuilder_ != null) {
          return ledgerInfoToTransactionInfoProofBuilder_.getMessageOrBuilder();
        } else {
          return ledgerInfoToTransactionInfoProof_ == null ?
              types.Proof.AccumulatorProof.getDefaultInstance() : ledgerInfoToTransactionInfoProof_;
        }
      }
      /**
       * <code>.types.AccumulatorProof ledger_info_to_transaction_info_proof = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          types.Proof.AccumulatorProof, types.Proof.AccumulatorProof.Builder, types.Proof.AccumulatorProofOrBuilder> 
          getLedgerInfoToTransactionInfoProofFieldBuilder() {
        if (ledgerInfoToTransactionInfoProofBuilder_ == null) {
          ledgerInfoToTransactionInfoProofBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              types.Proof.AccumulatorProof, types.Proof.AccumulatorProof.Builder, types.Proof.AccumulatorProofOrBuilder>(
                  getLedgerInfoToTransactionInfoProof(),
                  getParentForChildren(),
                  isClean());
          ledgerInfoToTransactionInfoProof_ = null;
        }
        return ledgerInfoToTransactionInfoProofBuilder_;
      }

      private types.TransactionInfoOuterClass.TransactionInfo transactionInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          types.TransactionInfoOuterClass.TransactionInfo, types.TransactionInfoOuterClass.TransactionInfo.Builder, types.TransactionInfoOuterClass.TransactionInfoOrBuilder> transactionInfoBuilder_;
      /**
       * <code>.types.TransactionInfo transaction_info = 2;</code>
       */
      public boolean hasTransactionInfo() {
        return transactionInfoBuilder_ != null || transactionInfo_ != null;
      }
      /**
       * <code>.types.TransactionInfo transaction_info = 2;</code>
       */
      public types.TransactionInfoOuterClass.TransactionInfo getTransactionInfo() {
        if (transactionInfoBuilder_ == null) {
          return transactionInfo_ == null ? types.TransactionInfoOuterClass.TransactionInfo.getDefaultInstance() : transactionInfo_;
        } else {
          return transactionInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>.types.TransactionInfo transaction_info = 2;</code>
       */
      public Builder setTransactionInfo(types.TransactionInfoOuterClass.TransactionInfo value) {
        if (transactionInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          transactionInfo_ = value;
          onChanged();
        } else {
          transactionInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.types.TransactionInfo transaction_info = 2;</code>
       */
      public Builder setTransactionInfo(
          types.TransactionInfoOuterClass.TransactionInfo.Builder builderForValue) {
        if (transactionInfoBuilder_ == null) {
          transactionInfo_ = builderForValue.build();
          onChanged();
        } else {
          transactionInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.types.TransactionInfo transaction_info = 2;</code>
       */
      public Builder mergeTransactionInfo(types.TransactionInfoOuterClass.TransactionInfo value) {
        if (transactionInfoBuilder_ == null) {
          if (transactionInfo_ != null) {
            transactionInfo_ =
              types.TransactionInfoOuterClass.TransactionInfo.newBuilder(transactionInfo_).mergeFrom(value).buildPartial();
          } else {
            transactionInfo_ = value;
          }
          onChanged();
        } else {
          transactionInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.types.TransactionInfo transaction_info = 2;</code>
       */
      public Builder clearTransactionInfo() {
        if (transactionInfoBuilder_ == null) {
          transactionInfo_ = null;
          onChanged();
        } else {
          transactionInfo_ = null;
          transactionInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.types.TransactionInfo transaction_info = 2;</code>
       */
      public types.TransactionInfoOuterClass.TransactionInfo.Builder getTransactionInfoBuilder() {
        
        onChanged();
        return getTransactionInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>.types.TransactionInfo transaction_info = 2;</code>
       */
      public types.TransactionInfoOuterClass.TransactionInfoOrBuilder getTransactionInfoOrBuilder() {
        if (transactionInfoBuilder_ != null) {
          return transactionInfoBuilder_.getMessageOrBuilder();
        } else {
          return transactionInfo_ == null ?
              types.TransactionInfoOuterClass.TransactionInfo.getDefaultInstance() : transactionInfo_;
        }
      }
      /**
       * <code>.types.TransactionInfo transaction_info = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          types.TransactionInfoOuterClass.TransactionInfo, types.TransactionInfoOuterClass.TransactionInfo.Builder, types.TransactionInfoOuterClass.TransactionInfoOrBuilder> 
          getTransactionInfoFieldBuilder() {
        if (transactionInfoBuilder_ == null) {
          transactionInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              types.TransactionInfoOuterClass.TransactionInfo, types.TransactionInfoOuterClass.TransactionInfo.Builder, types.TransactionInfoOuterClass.TransactionInfoOrBuilder>(
                  getTransactionInfo(),
                  getParentForChildren(),
                  isClean());
          transactionInfo_ = null;
        }
        return transactionInfoBuilder_;
      }

      private types.Proof.AccumulatorProof transactionInfoToEventProof_;
      private com.google.protobuf.SingleFieldBuilderV3<
          types.Proof.AccumulatorProof, types.Proof.AccumulatorProof.Builder, types.Proof.AccumulatorProofOrBuilder> transactionInfoToEventProofBuilder_;
      /**
       * <code>.types.AccumulatorProof transaction_info_to_event_proof = 3;</code>
       */
      public boolean hasTransactionInfoToEventProof() {
        return transactionInfoToEventProofBuilder_ != null || transactionInfoToEventProof_ != null;
      }
      /**
       * <code>.types.AccumulatorProof transaction_info_to_event_proof = 3;</code>
       */
      public types.Proof.AccumulatorProof getTransactionInfoToEventProof() {
        if (transactionInfoToEventProofBuilder_ == null) {
          return transactionInfoToEventProof_ == null ? types.Proof.AccumulatorProof.getDefaultInstance() : transactionInfoToEventProof_;
        } else {
          return transactionInfoToEventProofBuilder_.getMessage();
        }
      }
      /**
       * <code>.types.AccumulatorProof transaction_info_to_event_proof = 3;</code>
       */
      public Builder setTransactionInfoToEventProof(types.Proof.AccumulatorProof value) {
        if (transactionInfoToEventProofBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          transactionInfoToEventProof_ = value;
          onChanged();
        } else {
          transactionInfoToEventProofBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.types.AccumulatorProof transaction_info_to_event_proof = 3;</code>
       */
      public Builder setTransactionInfoToEventProof(
          types.Proof.AccumulatorProof.Builder builderForValue) {
        if (transactionInfoToEventProofBuilder_ == null) {
          transactionInfoToEventProof_ = builderForValue.build();
          onChanged();
        } else {
          transactionInfoToEventProofBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.types.AccumulatorProof transaction_info_to_event_proof = 3;</code>
       */
      public Builder mergeTransactionInfoToEventProof(types.Proof.AccumulatorProof value) {
        if (transactionInfoToEventProofBuilder_ == null) {
          if (transactionInfoToEventProof_ != null) {
            transactionInfoToEventProof_ =
              types.Proof.AccumulatorProof.newBuilder(transactionInfoToEventProof_).mergeFrom(value).buildPartial();
          } else {
            transactionInfoToEventProof_ = value;
          }
          onChanged();
        } else {
          transactionInfoToEventProofBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.types.AccumulatorProof transaction_info_to_event_proof = 3;</code>
       */
      public Builder clearTransactionInfoToEventProof() {
        if (transactionInfoToEventProofBuilder_ == null) {
          transactionInfoToEventProof_ = null;
          onChanged();
        } else {
          transactionInfoToEventProof_ = null;
          transactionInfoToEventProofBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.types.AccumulatorProof transaction_info_to_event_proof = 3;</code>
       */
      public types.Proof.AccumulatorProof.Builder getTransactionInfoToEventProofBuilder() {
        
        onChanged();
        return getTransactionInfoToEventProofFieldBuilder().getBuilder();
      }
      /**
       * <code>.types.AccumulatorProof transaction_info_to_event_proof = 3;</code>
       */
      public types.Proof.AccumulatorProofOrBuilder getTransactionInfoToEventProofOrBuilder() {
        if (transactionInfoToEventProofBuilder_ != null) {
          return transactionInfoToEventProofBuilder_.getMessageOrBuilder();
        } else {
          return transactionInfoToEventProof_ == null ?
              types.Proof.AccumulatorProof.getDefaultInstance() : transactionInfoToEventProof_;
        }
      }
      /**
       * <code>.types.AccumulatorProof transaction_info_to_event_proof = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          types.Proof.AccumulatorProof, types.Proof.AccumulatorProof.Builder, types.Proof.AccumulatorProofOrBuilder> 
          getTransactionInfoToEventProofFieldBuilder() {
        if (transactionInfoToEventProofBuilder_ == null) {
          transactionInfoToEventProofBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              types.Proof.AccumulatorProof, types.Proof.AccumulatorProof.Builder, types.Proof.AccumulatorProofOrBuilder>(
                  getTransactionInfoToEventProof(),
                  getParentForChildren(),
                  isClean());
          transactionInfoToEventProof_ = null;
        }
        return transactionInfoToEventProofBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:types.EventProof)
    }

    // @@protoc_insertion_point(class_scope:types.EventProof)
    private static final types.Proof.EventProof DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new types.Proof.EventProof();
    }

    public static types.Proof.EventProof getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EventProof>
        PARSER = new com.google.protobuf.AbstractParser<EventProof>() {
      @java.lang.Override
      public EventProof parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EventProof(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EventProof> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EventProof> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public types.Proof.EventProof getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_types_AccumulatorProof_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_types_AccumulatorProof_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_types_SparseMerkleProof_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_types_SparseMerkleProof_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_types_AccumulatorConsistencyProof_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_types_AccumulatorConsistencyProof_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_types_SignedTransactionProof_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_types_SignedTransactionProof_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_types_AccountStateProof_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_types_AccountStateProof_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_types_EventProof_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_types_EventProof_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013proof.proto\022\005types\032\026transaction_info.p" +
      "roto\"@\n\020AccumulatorProof\022\016\n\006bitmap\030\001 \001(\004" +
      "\022\034\n\024non_default_siblings\030\002 \003(\014\"O\n\021Sparse" +
      "MerkleProof\022\014\n\004leaf\030\001 \001(\014\022\016\n\006bitmap\030\002 \001(" +
      "\014\022\034\n\024non_default_siblings\030\003 \003(\014\"o\n\033Accum" +
      "ulatorConsistencyProof\022\034\n\024frozen_subtree" +
      "_roots\030\001 \003(\014\022\024\n\014num_siblings\030\002 \001(\r\022\034\n\024no" +
      "n_default_siblings\030\003 \003(\014\"\222\001\n\026SignedTrans" +
      "actionProof\022F\n%ledger_info_to_transactio" +
      "n_info_proof\030\001 \001(\0132\027.types.AccumulatorPr" +
      "oof\0220\n\020transaction_info\030\002 \001(\0132\026.types.Tr" +
      "ansactionInfo\"\322\001\n\021AccountStateProof\022F\n%l" +
      "edger_info_to_transaction_info_proof\030\001 \001" +
      "(\0132\027.types.AccumulatorProof\0220\n\020transacti" +
      "on_info\030\002 \001(\0132\026.types.TransactionInfo\022C\n" +
      "!transaction_info_to_account_proof\030\003 \001(\013" +
      "2\030.types.SparseMerkleProof\"\310\001\n\nEventProo" +
      "f\022F\n%ledger_info_to_transaction_info_pro" +
      "of\030\001 \001(\0132\027.types.AccumulatorProof\0220\n\020tra" +
      "nsaction_info\030\002 \001(\0132\026.types.TransactionI" +
      "nfo\022@\n\037transaction_info_to_event_proof\030\003" +
      " \001(\0132\027.types.AccumulatorProofb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          types.TransactionInfoOuterClass.getDescriptor(),
        }, assigner);
    internal_static_types_AccumulatorProof_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_types_AccumulatorProof_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_types_AccumulatorProof_descriptor,
        new java.lang.String[] { "Bitmap", "NonDefaultSiblings", });
    internal_static_types_SparseMerkleProof_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_types_SparseMerkleProof_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_types_SparseMerkleProof_descriptor,
        new java.lang.String[] { "Leaf", "Bitmap", "NonDefaultSiblings", });
    internal_static_types_AccumulatorConsistencyProof_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_types_AccumulatorConsistencyProof_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_types_AccumulatorConsistencyProof_descriptor,
        new java.lang.String[] { "FrozenSubtreeRoots", "NumSiblings", "NonDefaultSiblings", });
    internal_static_types_SignedTransactionProof_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_types_SignedTransactionProof_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_types_SignedTransactionProof_descriptor,
        new java.lang.String[] { "LedgerInfoToTransactionInfoProof", "TransactionInfo", });
    internal_static_types_AccountStateProof_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_types_AccountStateProof_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_types_AccountStateProof_descriptor,
        new java.lang.String[] { "LedgerInfoToTransactionInfoProof", "TransactionInfo", "TransactionInfoToAccountProof", });
    internal_static_types_EventProof_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_types_EventProof_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_types_EventProof_descriptor,
        new java.lang.String[] { "LedgerInfoToTransactionInfoProof", "TransactionInfo", "TransactionInfoToEventProof", });
    types.TransactionInfoOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
